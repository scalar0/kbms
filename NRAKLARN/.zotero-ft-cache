A tooleD MethoD to
'HĆQH $QDO\VH 'HVLJQ 9DOLGDWH 6\VWHP 6RIWZDUH +DUGZDUH $UFKLWHFWXUHV
Supporting
(IĆFLHQW &ROODERUDWLRQ
in engineering
Validating/Justifying solution against operational Need easing Impact analysis
compatible with most processes
top-down bottom-up, iterative, legacy-based, mixed ...
Operational Analysis
What the users of the system need to accomplish
Functional &
Non Functional Need
What the system has to accomplish for the users
Logical Architecture
How the system will work WR IXOĆOO H[SHFWDWLRQV
Physical Architecture
How the system will be developed and built
ViewPoints
F6
F21
F1
C11
F22 C12
C2
F7
C1’ C3
C4
Processors
Buses
ViewPoints
F6
F21
F1
C1
F22
C2
F3
C3
F5
F3
F4
F2
F1
ViewPoints
Reqs
A3
A2
A1
ViewPoints
Solution architectural design Need understanding
A : Operational activity F : Function C : Component
Shared & Capitalised
Architecture Models
Architects design authority
Product Line Managers Requirement Managers
Others
Logistics Engineers
SW/HW Designers & Developpers
IVVQ Manager
Customers
Safety, Performance, interface... Engineers
OPERATIONAL NEED ANALYSIS Done & Checked
Done & Checked
Done & Checked
Done & Checked
Done & Checked
Method layers
Time
FUNCTIONAL / NON FUNCTIONAL NEED ANALYSIS
LOGICAL ARCHITECTURE DESIGN
PHYSICAL ARCHITECTURE DESIGN
CONTRACTS FOR DEVELOPMENT & IVVQ
Iterative, incremental
Bottom-up, legacy, Reuse
Top-down
eclipse.org/capella


MethoD StepS
SolutIoNS NeeD
customer operational Need analysis
what the users of the system need to accomplish
System/ Sw/hw Need analysis
what the system has to accomplish for the users
logical architecture Design
how the system will ZRUN VR DV WR IXOĆO expectations
physical architecture Design
how the system will be developed & built
Development contracts
what is expected from each designer/ sub-contractor
'HĆQH RSHUDWLRQDO capabilities
perform an operational need analysis
perform a capability trade-off analysis
perform a functional and non-functional analysis
Formalise and consolidate requirements
'HĆQH DUFKLWHFWXUH
drivers and viewpoints
Build candidate architectural breakdowns in components
select best compromise architecture
'HĆQH DUFKLWHFWXUDO patterns
consider reuse of existing assets design a physical
design a physical reference architecture
validate and check it
'HĆQH D FRPSRQHQWV ivvQ strategy
'HĆQH HQIRUFH D pBs and component integration contract
taSKS SaMple MoDel
Radio contents
BROADCASTING STATION
Elaborate Radio Programs
ENVIRONMENT
Broadcast Radio channels
USER
Get news
Listen to Music
News Radio channel Music Radio channel
Receive radio signal
Play radio contents
Select radio station
E N V I R O N M E N T
EM waves Radio signal
RADIO SET
Volume
Station
Audio sound
Radio name
Fréquency
USER
ENVIRONMENT
RADIO RECEIVER
Receive radio signal
RADIO CONTROL
Play radio signal
Extract radio RDS
name
USER INTERFACE
Select radio frequency
Select Sound volume
Display radio name
U S E R
Radio
signal
Frequency Station
Volume
Radio
name
Audio sound
Sound
level
Frequency tuning
EwaMve
RCA audio cable
USER
QW AS
E
HF REVEIVER
DEMODULATOR
ANALOG BOARD
AUDIO PROCESSING
AUDIO PROCESSOR
Play radio signal
RDS MANAGER
MICRO CONTROLLER
Extract radio name
DISPLAY GENERATION
Display radio name
USER INPUT PROCESSING
KEYBOARD PROCESSOR SPEAKER
Select radio signal
DISPLAY
caRauCbdAlieo
Discrete
I/O
Serial
RS232
Serial
RS232
Serial
RS232
Serial
RS232
VGA video
cable
RADIO SET
BODY USER INTERFACE
CABLING
MAIN RACK
HF Receiver
Demodulator
Audio processing
Radio control
μController
Speaker
Analog board
Audio processor
Rack mechanics
User input processing
Display
1
2
4
2
μController
Prime item
HWCI
CSCI
COTS
Analog board
Audio processor
VGA cable
RS 232 cable
Discrete I/O
RCA cable


ACTOR 1 ACTOR 2
SOUND PROFILE
BASS LEVEL
LOUDNESS TREBBLE LEVEL
FILTER VALUE
Values : From -50 to +50 Unit : dB
FREQUENCY BAND Values : 0.1, 0.2, 3.0, 6.0 Unit : KHz
FREQUENCY
Values : From 88 to +108 Unit : MHz
TUNING VALUE
Values : From 0 to +100
is composed of
is kind of
uses
START
END
MODE 1
MODE 3
MODE 2
- Operational capabilities - actors, operational entities - actor activities - interactions between activities & actors - information used in activities & interactions - Operational processes chaining activities - scenarios for dynamic behaviour
'DWDćRZ: functions, op. activities interactions & exchanges
)XQFWLRQDO FKDLQV
operational processes through functions & op. activities
Modes & states of actors, system, components
component wiring:
all kinds of components
Breakdown of functions & components
Scenarios: actors, system, components interactions & exchanges
Data model GDWDćRZ & scenario contents, GHĆQLWLRQ MXVWLĆFDWLRQ RI interfaces
allocation of op.activities to actors, of functions to components, of behav.components to impl.components, RI GDWDćRZV WR LQWHUIDFHV RI HOHPHQWV WR FRQĆJXUDWLRQ LWHPV
- actors and system, capabilities - Functions of system & actors
'DWDćRZ H[FKDQJHV EHWZHHQ IXQFWLRQV )XQFWLRQDO FKDLQV WUDYHUVLQJ GDWDćRZ - information used in functions & exchanges, data model - scenarios for dynamic behaviour - Modes & states
saMecOncepts,plus: - components - component ports and interfaces - exchanges between components - Function allocation to components &RPSRQHQW LQWHUIDFH MXVWLĆFDWLRQ E\ functional exchanges allocation
saMecOncepts,plus:
%HKDYLRXUDO FRPSRQHQWV UHĆQLQJ logical ones, and implementing functional behaviour - implementation components supplying resources for behavioural components - physical links between implementation components
&RQĆJXUDWLRQ LWHPV WUHH - parts numbers, quantities - development contract (expected behaviour, interfaces, scenarios, resource consumption, non-functional properties...)
coNceptS DeScrIptIoN MeaNS
FUNCTION
FUNCTION
FUNCTION
BEHAVIORAL COMPONENT
BEHAVIORAL COMPONENT
Functional Flow


Verifying & checking solution against Non-functional & Industrial Stakes
Maintainability
Safety/security
...
IVVQ
Product Policy
Cost & Schedule
Interfaces
Performance
Method layers 3HUIRUPDQFH VSHFLĆF GDWD VDPSOH 6DIHW\ VSHFLĆF GDWD VDPSOH
OperatiOnal need analysis Max reaction time to threat Feared events
FunctiOnal/nOnFunctiOnalneedanalysis Functional chain (Fc) to react to threat.
Maximum allowed latency on Fc critical functional chains associated to events
lOgical architecture design processing & exchanges complexity
Functional chains allocation redundancy paths securing functional chains
physical architecture design resource consumption on Fc
resulting computing latency
common failure modes Fault propagation on Fc
cOntracts FOr develOpMent & ivvQ allocated resources to satisfy latency needed reliability level
NoN fuNctIoNal
VIewpoINtS (exaMpleS) DyNaMIc BehaVIour
Function
User
System
Triggers
References
Enable Disable Activates
References References Mode or State
Mode or State
MODE
MODE
USER SYSTEM
Function
Function
Function
DATA
Resulting
architecture
Compute function traversal time according to implem component & comms perf Deduce achieved latency &
FRPSDUH WR H[SHFWHG
Compare redundancy level with functional chain criticity Propagate HW failures to functional chains
Compute load based on functions & check adequacy Both on computing power and communication bandwidth
MULTI-VIEWPOINT CHECK OF ARCHITECTURE
ARCHITECTURE CHECK
Safety
Technical
performance Operational
performance
Latency :
New attribute of functional
FKDLQ H[SHFWHG FRPSXWHG
Redundancy :
([WHQVLRQ RI IXQFWLRQDO FKDLQ
A
B
C
VOTE
Server 1
CLIENT
Server 2
Load balanced cluster : New concept
Voter :
([WHQVLRQ RI component
< 2 seconds
Functions or components
R1
R2
R3
Design by webrand . www.webrand.fr . paris & Nice