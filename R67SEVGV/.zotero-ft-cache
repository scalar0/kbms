Paramagnetism Diamagnetism
Ferromagnetism


Pauli paramagnetism
ε! = p"
2m − μ#Hσ p" = p$" + p%" + p&" σ = ±1
-μBH
μBH
μ0
e
N± = 4πV
3h( p(± p"±
2m = μ) ∓ μ#H
= 4πVμ#
3h( 2m μ) + μ#H (⁄" − 2m μ) − μ#H (⁄"
M = −μ# N+ − N, = −μ#
4πV
3h( p(+ − p,(
M = 3Hμ"! 4πV
3h#
2mμ$ #⁄"
μ$
+⋯=3
2
μ"! N
μ$
H+⋯
μ$ ≫ μ!H
N = 2 4πV
3h# 2mμ$ #⁄"
χ=3
2
μ"! n
μ$
n=N
V


Pauli paramagnetism
M = μ! 2 ρ ε dε
exp ε − μ!H − μ
k!T + 1
− 2 ρ ε dε
exp ε + μ!H − μ
k!T + 1
For small μ!H χ = M
H = 2μ"! 2ρ′ ε f ε dε
= μ! 2 ρ ε + μ!H − ρ ε − μ!H f ε dε
χ$ = M
H = 2μ"! 2
$
&!
ρ′ ε dε = 2μ"!ρ μ$
For Т=0
For non-degenerate gas. f ε = exp − '(&
)"*
2 ρ′ ε exp − ε − μ
k!T dε = ρ ε exp − ε − μ
k!T $
+
+1
k!T 2 ρ ε exp − ε − μ
k!T dε = n
k!T χ = μ"!n
k! T
Task: Find the temperature dependence of the spin paramagnetic susceptibility
of a degenerate Fermi gas.


Landau diamagnetism
mv̇, = − eH
c v- mv̇- = eH
c v, mv̇. = 0
ω$ = eH
mc
v̇, = −ω$v- v̇- = ω$v,
ṗ = −ω$"q
q̇ = p H = p"
2m + ω$"q"
2
ε/ = ħω0 l + 1
2
L"
h" dp,dp
L"
h" Q
1
"&"2/34#$54%$
"6 3"&"2(/58
dp,dp-= L"
h" Q
"&"2/3 4$ 1
"63"&"2(/58
2πpdp = L"
h" πp"
4$
"69"&"2/
1
4$
"69"&"2(/58
= L"
h" π4μ!Hm = L"eH
hc
μ! = eħ
2mc


Landau diamagnetism
Z8 = L
h2
(+
+
dp. S
/9$
+ L"eH
hc exp −
2μ!H l + 1
2 + p."
2m k! T
= 2πmk!T 8⁄"
h L L"eH
hc
e(&"2
)"*
1 − e("&"2
)"*
= 4V 2πmk!T
h"
#⁄" μ!H
k! T
sh μ!H
k! T
Z = Z8:
N! M = k!T ∂lnZ
∂H = Nk!T ∂
∂H ln
μ! H k! T
sh μ!H
k! T
= −Nμ!L μ!H
k!T L x = cth x − 1
x
ε = p."
2m + 2μ!H l + 1
2 ± μ!H Z8 = 4V 2πmk!T
h"
#⁄" μ!H
k! T
sh μ!H
k! T
2ch μ!H
k!T Z(k!T, H) = Z(k!T, 0)
μ! H k! T
sh μ!H
k! T
2ch μ!H
k! T
:
M = k!T ∂lnZ
∂H = Nμ!th μ!H
k!T − Nμ!L μ!H
k!T χ = M
H=
N(μ"! − 1 a
3 μ"!
k!T = 2Nμ"!
3k!T


Ferromagnetism. Stoner Model
D
μ0
e
M = N+ − N,
Δ = λM


The mean-field approximation
ε = μ#Hσ σ = ±1 Z- = e,.!/
0!1 + e
.!/
0!1 = 2ch μ#H
k#T Z: = 2ch μ!H
k! T
:
F = −Nk#T ln 2ch μ#H
k#T S = − ∂F
∂T = Nk# ln 2ch μ#H
k#T − μ#H
k#T th μ#H
k#T
U = F + TS = −Nμ#Hth μ#H
k#T M = N μ#e
.!/
0!1 − μ#e,.!/
0!1
e
.!/
0!1 + e,.!/
0!1
= Nμ#th μ#H
k#T
M = − ∂F
∂H
U = −MH
M = n < μ >= nμeth μeHfgg
khT
Hfgg = H + Hi = H + λM μeHi = J(< zj >−< zk >) = zJ M
nμe
λ = zJ
nμel
M
nμe
= X = th zJ
khT X


Bragg-Williams approximation for Ising model
N+ + N, = N W = N!
N+! N,!
S = k# ln W = −k# N+ ln N+
N + N, ln N,
N = −k#N 1
2 1 + X ln 1
2 1+X +1
2 1 − X ln 1
2 1−X
N+
N =1
2 1 + X N,
N =1
2 1−X
E = −J(N++ + N,, − N+,) ≈ −J(< N++> +< N,,> −< N+,>)
< N55> = 1
2 zN5p5 = 1
2 zN5
N5
N =1
8 zN 1 + X " < N5(> = 1
2 zN5p( = 1
2 zN5
N(
N =1
4 zN 1 − X"
< N((> = 1
2 zN(p( = 1
2 zN(
N(
N =1
8 zN 1 − X " E = − 1
2 zJNX"
F = E − TS
F = −1
2 zJNX" + Nk!T 1
2 1 + X ln 1
2 1+X +1
2 1 − X ln 1
2 1 − X ∂F
∂X = 0
zJNX = 1
2 Nk!Tln 1 + X
1−X
zJ
k!T X = 1
2 Nln 1 + X
1 − X th zJ
k!T X = X


Tasks
In the mean field approximation, calculate the heat capacity in the Ising model.
Investigate its behavior near the Curie point Tc, and for T<<Tc
Find S(T)-S(0) for the Ising model in the mean field approximation
Using the Bragg-Williams approximation, calculate the heat capacity of a binary alloy near
the disorder point


Landau theory of second order phase transitions
F = E − TS dF = −SdT + HdM
F T, M = F) T + A T M" + B T M2 + ⋯
H = ∂F
∂M 1
= 2A T M + 4B T M( + ⋯
Equation of state
χ1,- = ∂H
∂M 1
= 2A T + 12B T M" + ⋯
Additional condition: χ1,- → 0 for T → T3 )
A T = a(T − T3
ε = T − T3
T3 Critical indices : M ∼ ε4 C ∼ ε5 χ1 ∼ ε6
Problem: Find critical indices a,b,g in Landau theory


Localized magnetic models


1D Ising Model
H = −J %
!"#
$
σ!σ!%# − H %
!"#
$
σ! σ! = ±1 σ$%# ≡ σ#
β= 1
k&T K = J
k&T L = H
k&T
Z$ = %
'()*
e+,H = %
'()*
e K ∑! 0!0!"#%L ∑! 0! Z$ = e K$ chL + sh2L + e+3K $
if H = 0 Z$ = 2$ch$K
F = −k&T ln Z$ = −k&TN ln 2 − k&TN ln ch K
U = k&T2 ∂ ln Z$
∂T U = −J N th K C~ K2
ch2K


1D Ising Model
Magnetization: M = #
$%&
'
σ$ Z$ = %
'()*
e+,H = %
'()*
e K ∑! 0!0!"#%L ∑! 0!
M = ∂ ln Z$
∂L = M4 sh L
sh2L + e+3K χ = ∂M
∂H 5,7"4
χ=1
J Ke2K
5→4 ∞
Correlation function: σ!σ!%) σ!σ!%) )→9 σ! σ!%) = :
$
2
H = −%
!"#
$
J!,!%# σ! σ!%#
σ$!σ$!() = σ$!σ$!(&σ$!(&σ$!(* ... σ$!()+&σ$!()
Z$ = %
'()*
e∑! K!,!"#0!0!"# = 2' '
$%&
'
ch K$,$(&
=1
Z'
∂
∂K$!,$!(&
∂
∂K$!(&,$!(*
...∂
∂K$!()+&,$!()
Z' = th)K )→.
/01
0


1D Ising Model
j
ij
i
Н J ss
å
<>
=
,
= ±1
i
s
Ground state, T=0,
Chain of Ising spins with periodic boundary conditions


T 1 0 Free energy F=U-TS
The free energy cost of such excitaions
DF=DU-TDS DU=4J DS=kB ln(N)
li®m¥ DF = 4J - k T Nli®m¥ ln(N ) = -¥
B
N T 10
for any
These fluctuations suffisiant to destroy long-range order


Two dimensions
JN
a
L
U 4J » 4
÷ø
ö
çè
æ
D=
S kB N kB ln N
2
1
D » ln =
F J N kBT ln N
2
1
D » 4 - For large N N > ln N
Such fluctuations cannot destroy long-range order in the limit large N
LRO is stable at low temperature. Destroyed by more expensive
excitations at higher temperature.


Arbitrary dimension
d
d
d
JN
a
L
UJ
1
1
44


»
÷ø
ö
çè
æ
D = F JN kBT N
d
d
ln
1
D» 

Critical dimension (at which LRO became stable)
d=1 for Izing model
For finite system:
Let disorder appears on a length scale (N) for which DF=0
Let kBT=0.1 J Then N=exp (4J/kBT)~exp(40) – large number!
Finite system can look as ordered !


Continuous spin models-XY or Heisenberg:
dq 2dq 3dq
L/2 L/2
L
pa
dq 2
=d
N~L
d
d
U J J N JN JN N d JN
2
2
1
2
~
2
()
[ cos( ) ( )]


=
÷÷
ø
ö
çç
è
D = - - - » dq × æ
dq
F JN kBT N
d
d
ln
2
D» 

Critical dimensionality d=2
Continuous spin systems have softer, more efficient fluctuations


Summary
• Dimension is important for stability of LRO
• In the infinite low dimensional systems (d=2 for Heisenberg model) cannot be LRO but finite systems
may look like ordered


Mean field approach
H = −1
2%
;!,<=
J!<σ!σ< − H %
!"#
$
σ! Mean field: H>*= σ J + H J = %
<
J!<
σ=
+1 exp J
k&T σ + H
k&T + −1 exp − J
k&T σ + H
k&T
Z
H! = −σ! H>*
σ = th β J σ + H if H=0 σ = th βJ σ
T? = J
k&


Model with a weak long-range interaction
H=−J
N&
!"#$%"&
σ#σ% = − J
2N &
#,%
σ#σ% + J
2N &
#
σ#
( =− J
2N &
#
σ#
(
+J
2N
Z& = e)K &
+!,)!,+",)!...
+!,!,+",!...
e K ∑# +# & "
K= J
2k/T
Mathematical identity:
e$! = 1
2π &
%&
&
e%'!
( ) ($' dx
a= K
N,
*
σ* ⟹ e K ∑# +# & "
=!
(0 ∫)1
1 e)+"
"e
"K
- ∑# +#2dx
Z.eK= 1
2π 2. &
%&
&
e%'!
( ch 2K
Nx
.
dx y = x
N
Z.= N
2π 2.e%K &
%&
&
e%./!
( ch 2Ky .dy
⟹


Model with a weak long-range interaction
Z&= N
2π 2&e)K 3
)1
1
e)&3"
( ch 2Ky &dy Z&= N
2π 2&e)K 3
)1
1
e
& )3"
( 456 78 (K3
dy
f y = − y(
2 + ln ch 2Ky y9 = 2Kth 2Ky9
2K < 1
2K > 1
y0
2K=1 - Critical point
T: = J
k/
K= J
2k/T


Second quantization representation


Hamiltonian and Schrödinger Equation
(,)
2
1
()
1
åå
=1
=+
N
kl
kl
N
k
H h xk V x x xk o (rk ,σk )
L - one-particle operator
( ,... , ) ( ,... , ) ( 1 )... ( )
...
1 11
1
s sN ss
N NN
N
x x t åC s s t j x j x
Y=
jk (x) lkjk (x)
L=
oY
¶
¶Y H
t
i
i∂
∂t C s! ... s&, t = &
#,!
&
&
;
s# h s C s! ... s#, s, s#4! ... s&, t +
+1
2&
#,%,!
&
&
;,;<
s#, s% h s, s′ C s! ... s#, s, s#4! ... s%, s′, s%4! ... s&, t
( ,... , ) 2 1
...
1
1
=
å
s sN
C s sN t


Transition to occupation numbers
( , ..., )
~
C (s1,...sN ,t ) ® C n1 n2 t !
!!,!"...
=!
$% !&' () !'*'&! !
!
$% +&,-.'*'/(0 1/'2/0 !'*'&
=!
!
N!
n3! n4! ...
Normalization condition: ,
1",1!...
N!
n4! n(! ... C8 n4, n( , ... , t ( = 1
Schrödinger equation:
i∂
∂t C8 n4, n(, ... t = ,
5
,
6
p h r C8 n4, ... n5 − 1, ... n6 + 1, ... , t n5 +
+1
2,
5,7
,
6,8
p, q h r, s C8 n4, ... n5 − 1, ... n7 − 1, ... n6 + 1, ... n8 + 1, ... , t n5 n7 − δ57


Raising and Lowering Operators
U,CE n!, ... n=, ... , t = CE n!, ... n= + 1, ... , t
UFGCG n!, ... n=, ... , t = HCG n!, ... n= − 1, ... , t , если n= ≠ 0
0, если n= = 0
In matrix representation:
U,CE n!, ... n=, ... , t =
01 00
0... 1... 00 ......
0... ......
CE n!, ... 0, ... , t
CE n!, ... 1, ... , t
CE n!, ... 2, ... , t ...
=
CE n!, ... 1, ... , t
CE n!, ... 2, ... , t
CE n!, ... 3, ... , t ...
rr


Raising and Lowering Operators
U6 =
01
00
0...
1... 00
......
0...
......
U6) =
00
10
0...
0... 01
......
0...
......
n6 =
00
01
0...
0... 00
......
2...
......
U6n6 =
01
00
0...
1... 00
......
0...
......
00
01
0...
0... 00
......
2...
......
=
01
00
0...
2... 00
......
0...
......
n6U6 =
00
01
0...
0... 00
......
2...
......
01
00
0...
1... 00
......
0...
......
=
00
00
0...
1... 00
......
0...
......
U6n6 = n6U6 + U6 = n6 + 1 U6


Raising and Lowering Operators
U6 =
01
00
0...
1... 00
......
0...
......
U6) =
00
10
0...
0... 01
......
0...
......
n6 =
00
01
0...
0... 00
......
2...
......
U6)n6 =
00
10
0...
0... 01
......
0...
......
00
01
0...
0... 00
......
2...
......
=
00
00
0...
0... 01
......
0...
......
n6U6) =
00
01
0...
0... 00
......
2...
......
00
10
0...
0... 01
......
0...
......
=
00
10
0...
0... 02
......
0...
......
U6)n6 = n6U6) − U6) = n6 − 1 U6)


U6F n6 = F n6 + 1 U6
U6)F n6 = F n6 − 1 U6)
Schrödinger equation:
i∂
∂t C8 = ,
5
,
6
p h r n5 U5)U6 C8 + 1
2,
5,7
,
6,8
p, q h r, s n5 n7 − δ57 U5)U7)U6U8 C8
Function fG with "correct" normalization : C( = f" K!!K"!...
L!
M/O
U6n6 = n6U6 + U6 = n6 + 1 U6
U6)n6 = n6U6) − U6) = n6 − 1 U6)
Raising and Lowering Operators


Creation-Annihilation Operators
1
n4! n(! ...
4/(
U6 n4! n(! ... 4/( = n6 + 1U6
1
n4! n(! ...
4/(
U6) n4! n(! ... 4/( = 1
n6
U6)
C> = fP n4! n(! ...
N!
4/(
1
n4! n(! ...
4/(
n5U5)U6 n4! n(! ... 4/( = n5U5)U6 n6
i∂
∂t
f8 = ,
5
,
6
p h r n5U5)U6 n6 f8 + 1
2,
5,7
,
6,8
p, q h r, s n5U5) n7U7)U6 n6U8 n8 f8
i∂
∂t C8 = ,
5
,
6
p h r n5 U5)U6 C8 + 1
2,
5,7
,
6,8
p, q h r, s n5 n7 − δ57 U5)U7)U6U8 C8
b6 = U6 n6 b6) = n6U6)


Hamiltonian
i∂
∂t f( = !
+
!
,
p h r n+U+5U, n, f( + 1
2!
+,6
!
,,!
p, q h r, s n+U+5 n6U65U, n,U! n! f( b6 = U6 n6
b6) = n6U6)
i∂
∂t f( = !
+
!
,
p h r b+5b, f( + 1
2!
+,6
!
,,!
p, q h r, s b+5b65b,b! f(
b,5b, = n,U,5U, n, = n,
b,b,5 = U, n, n,U,5 = n, + 1
b,, b,5 = 1
H=&
@
p h r b@4b= + 1
2&
@,A,=,;
p, q h r, s b@4bA4b=b;


Fermions
( ,... , ) ( ,... , ) ( 1 )... ( )
...
1 11
1
s sN ss
N NN
N
x x t åC s s t j x j x
Y = С антисимметрична по аргументам
Commutation relations: b,, b75 = δ,7
b,, b7 = b,5, b75 = 0
p, q V r, s = & φ5∗ ξ4 φ7∗ ξ( V ξ4, ξ( φ6 ξ( φ8 ξ4 dξ4dξ(
Matrix elements :
Field Operators: Ψ ξ = ,
8
b8 φ8 ξ Ψ) ξ = ,
8
b8) φ8∗ ξ
Commutation relations: Ψ ξ , Ψ5 ξ′ = δ ξ − ξ′ Ψ, Ψ = Ψ), Ψ) = 0 For bosons
Ψ ξ , Ψ5 ξ′ = δ ξ − ξ′ Ψ, Ψ = Ψ), Ψ) = 0 For fermions
δ ξ − ξ′ = δ;;<δ r − r′


Hamiltonian
> Ψ5 ξ h ξ Ψ ξ dξ = !
+,6
b+5b6 > φ+∗ ξ h ξ φ6 ξ dξ = !
+,6
p h q b+5b6
1
2 > > Ψ5 ξ3 Ψ5 ξ4 V ξ3, ξ4 Ψ ξ4 Ψ ξ3 dξ3dξ4 = 1
2!
+,6
p, q V r, s b+5b65b,b!
H = H9 + H: = > Ψ5 ξ h ξ Ψ ξ dξ + 1
2 > > Ψ5 ξ3 Ψ5 ξ4 V ξ3, ξ4 Ψ ξ4 Ψ ξ3 dξ3dξ4


Levitation of diamagnets in magnetic field
M V Berry and A K Geim Of flying frogs and levitrons 1997 Eur. J. Phys. 18 307
A. Geim, “Everyone’s Magnetism,” Phys. Today 51, 36 (1998).
M. D. Simon and A. K. Geim, “Diamagnetic levitation; flying frogs and floating magnets,” J. Appl. Phys. 87,
6200–6204 (2000)
Phase transition in 2D Ising Model
L. D. LANDAU and E. M. LIFSHITZ Course of Theoretical Physics. Vol.5
(Statistical physics) P. 541-549 (Russian edition)


Itinerant magnetism. Anderson Model. Mean field approximation
Anderson, P.W., Localized magnetic states in metals. Physical Review, 124(1), p.41 (1961).
Anderson, P.W., 1978. Local moments and localized states. Science, 201(4353), pp.307-316. НОБЕЛЕВСКИЕ ЛЕКЦИИ
ПО ФИЗИКЕ 1977 ГОДА ЛОКАЛЬНЫЕ МОМЕНТЫ И ЛОКАЛИЗОВАННЫЕ СОСТОЯНИЯ. УФН 127, 19 (1979)
Alexander, S. and Anderson, P.W. Interaction between localized states in metals. Physical Review, 133(6A), A1594 (1964).
Kondo problem
https://trv-science.ru/2010/04/problema-kondo/
Kouwenhoven, L. and Glazman, L., Revival of the Kondo effect. Physics world, 14(1), 33 (2001)
Logan, D.E. and Glossop, M.T. A local moment approach to magnetic impurities in gapless Fermi systems. Journal of
Physics: Condensed Matter, 12(6), 985 (2000).
Logan, D.E., Eastwood, M.P. and Tusch, M.A. A local moment approach to the Anderson model. Journal of Physics:
Condensed Matter, 10(12), 2673 (1998).


Green's functions for interacting particles


Hamiltonian of a system of many particles
i ∂φ r1, r2 ... rn, t
∂t = H)φ r1, r2 ... rn, t H) = +
$%&
' p$
(
2m + 1
2+
$,*
v ri − rj
Representation of occupation numbers:
H) = − 3 dr ψ- r, t ∇(
2m ψ r, t + 1
2 3 dr dr′ψ- r, t ψ- r′, t v r − r′ ψ r′, t ψ r, t
ψ r, t ψ- r′, t - = δ r − r′ ψ r, t ψ r′, t - = ψ- r, t ψ- r′, t - = 0
Equations of motion: i ∂F
∂t = F, H . i ∂ψ
∂t = − ∇(
2m ψ r, t + 3 dr1 ψ- r1, t v r − r& ψ r1, t ψ r, t
In momentum representation: ψ r, t = 1
V+
k
ck t e$kr ψ- r, t = 1
V+
k
ck
- t e.$kr
H) = +
k
εkck
-ck + 1
2+
k,p,p2
v k cp.k
- cp!-k
- cp2cp


Green functions
rj, t* ≡ x* ≡ j g x, x′ ≡ 1
i 0 T ψ x ψ- x′ 0
g' x& ... x'; x&2 ... x2' ≡ 1
i' 0 T ψ 1 ... ψ n ψ- n′ ... ψ- 1′ 0
T ψ x ψ- x′ = H ψ x ψ- x′ t > t′
±ψ- x′ ψ x t < t′
T|3%32= N|3%32
N: Creation operators on the left
i ∂g x, x′
∂t = ∂
∂t
1
i θ t − t′ 0 ψ x ψ- x′ 0 − θ t′ − t 0 ψ- x′ ψ x 0
=1
i δ t − t′ 0 ψ x ψ- x′ 0 + 0 ψ- x′ ψ x 0 + 0 T ∂ψ x
∂t ψ- x′ 0
=1
i δ x − x′ + 0 T ∂ψ x
∂t ψ- x′ 0
i∂
∂t + ∇4(
2m g x, x′ = δ x − x′ − i 3 dx&V(x, x&)g( x x&; x2 x& + 0
V(x, x&)= v r − r1 δ t − t&
−i ∂
∂t′ + ∇4(!
2m g x, x′ = δ x − x′ − i 3 dx&V(x′, x&)g( x x&; x2 x& + 0


Free particles (v=0)
H)5 = +
k
εkck
-ck g5 x, x′ = g5 x − x′ g5 x − x′ = 3 dp
2π 6 3 dω
2π e$p r.r! .$7(3.3!)g5 p, ω
g 5 x − x′ = 3 dp
2π 6 e$p r.r! g5 p, t − t′ = 1
i 3 dp
2π 6 e$p r.r! 0 Tcp t cp- t′ 0
g 5 p, t − t′ = −i 0 Tcp t cp- t′ 0
cp t = e$;:"3 cpe.$;:"3 cp +
k
nk = cp +
k
ck
-ck = +
k
δkpck − +
k
ck
-cpck = cp + +
k
ck
-ck = 1 + +
k
nk cp
cp t = e.$<p3 cp g 5 p, t − t′ = U−ie.$<p 3.3! 0 cpcp- 0 t > t′
ie.$<p 3.3! 0 cp-cp 0 t′ > t


Free particles
g 5 p, t − t′ = U−ie.$<p 3.3! 0 cpcp- 0 t > t′
ie.$<p 3.3! 0 cp-cp 0 t′ ≥ t
Ground state Т=0
nWp |0⟩ = np |0⟩
np = Y1. |p| ≤ p=
0. |p| > p=
cpcp-=1- nWp
g 5 p, t − t′ = U−ie.$<p 3.3! 1 − np t > t′
ie.$<p 3.3! np t2 ≥ t
g 5 p, t − t′ = 3 dω
2π e.$7 3.3! g 5 p, ω
g 5 p, ω = 3 d(t − t2) e$7 3.3! g 5 p, t − t′
g 5 p, ω = 1
ω − εp + iδ sign ω − ε=
δ = 0+
t > t′
|p| > p=
ω
|p| ≤ p=
ω
t2 ≥ t
g 5 p, t − t′ = U−2πi 1
2π e.$<p 3.3! p > p=
0. |p| ≤ p=
t > t′


Anderson model
https://trv-science.ru/2010/04/problema-kondo/


Magnetic impurity in a non-magnetic matrix
H=#
k,#
εk# n%k#
$ +#
#
E%
& n%#
& +#
k,#
V&kd#'ck# + Un%↑
& n%↓
& + h. c.
n%k#
$ = ck'#ck# n%#
& = d#'d#
Mean field approximation:
n%↑
& n%↓
& = n%↑
& n%↓
& + n%↑
& n%↓
& − n%↑
& n%↓
&


Equations for Green's functions
ω − εk gkk!
$ ω − Vk&g&k!
&$ ω = δkk!
ω − E& g&k
&$ ω − #
k!
V&k! gk!k
$ ω =0
ω − E> g>>
>> ω − +
k!
V>k! gk!>
? ω =1
ω − εk gk>
?> ω − Vk>g>>
>> ω = 0
ω − E> − +
k!
V>k! Vk!>
ω − εk!
g>>
>> ω = 1
ω − εk − +
k!
Vk> V>k!
ω − E>
gkk!
? ω = δkk!
E> ≡ E>@ = E5
> + U nW.@
> E@
> = E5
> + Re +
k!
V>k! Vk!>
ω − εk!
+ U nW.@
> Γ = Im +
k!
V>k! Vk!>
ω − εk!


Self-consistency equations
g>>
>> ω, α = 1 ω − E@
> − iΓ
E@
> = E5
> + Re +
k!
V>k! Vk!>
ω − εk!
+ U nW.@
>
Γ = Im +
k!
V>k! Vk!>
ω − εk!
ρ>@ ω = − 1
π Im g>>
>> ω − i0, α
1
x ± iε = P 1
x ∓ iπδ x
nW@
> =3
.A
<$
ρ>@ ω dω


Anderson model. Self-consistency.
ρ>@ = 1
π
Γ
ω − E> − U < n>
.@ > ( + Γ( < n>@ > = 1
π arcctg E> − ε= + U < n>.@ >
Γ


“Force theorem” for the Anderson model
Wˆ = Hˆ - μNˆ
()
å ò úú
û
ù
êê
ë
é < >< >
W= - 

-¥
a
aa a
e
ee r e e 2
( ) id d
Fd
Un n
d
F
åå ¶< >
¶< >
¶W
+
¶
¶W
=
W
i
d
dd
n
dn
d
ll l
a
a
()
lj ; nia(lj )
W=W


“Force theorem” for the Anderson model
-< >
- - < > +G
G
¶< >
¶
=
¶< >
¶W å
ò
--¥

a
a
aa
e
ae
e
ee
pd
dd
F
d
d Un
n n EUn
F
22
(0 )
()
1
-< >
- - < > +G
G
¶
¶
=- - å
ò
-¥
a
a
a
e
e
ee
ee
pd
d
F d Un
EUn
U
F
22
(0 )
()
úú
û
ù
êê
ë
= éò -< >
-¥
a
e
U rda e de nd
F
()
l ¶l
¶W
=
W
d
d
=
=


Alexander-Anderson model
Periodic Anderson model
Non-collinear Alexander-Anderson model


Anderson model
H=#
k,#
εk# n%k#
$ +#
#
E%
& n%#
& +#
k,#
V&kd#'ck# + Un%↑
& n%↓
& + h. c. n%k#
$ = ck'#ck# n%#
& = d#'d#
n%↑
& n%↓
& = n%↑
& n%↓
& + n%↑
& n%↓
& − n%↑
& n%↓
&
Mean field approximation
ρ!" = 1
π
Γ
ω − E! − U < n!
#" > $ + Γ$ < n!" > = 1
π arcctg E! − ε% + U < n!#" >
Γ
Г


Alexander-Anderson model
22 2
2 22 1
1
1 () ()
( ) - +G
G
+
- +G
G
=a
a
a
a a
pew pew
re C C
2
2
12
12
1, 2
2
2
2
2
1
V
EE
EE
C
+
÷÷
ø
ö
çç
è
æ
úû
ù
êë
é
=±
aa
aa
a 2
2
12 12
1,2 2 2 V
EE EE +
÷÷
ø
ö
çç
è
æ
±
+
=
aa aa a
w
H=#
k,#
εk# n%k#
$ +#
*,#
E*%
& n%*#
& +#
k,#
V&kd0*'#ĉk# + #
*+,,#
V*,d0*'#d0,# + #
*,#
U* n%*↑
& n%*↓
& + h. c.


“Force theorem” for Alexander-Anderson model
[ 1 ( ) 2 ( )] 1 ( )
1
re
e
ra e ra e a
a¶
¶
+=
¶
¶U
n
()
å å ò úú
û
ù
êê
ë
W= é - 

-¥
i
ii i Fi
Un n
d
F
a
aa a
e
ee r e e 2
()
úú
û
ù
êê
ë
- = é -< >
¶
¶
=- 
¶< >
¶W 
-¥
- -
-¥
ò òa
e
a aa
e
a r ee r ee
e
ee 1 1 1 1
1
U ( ) ( )d Un U ( )d n
n
FF
F


Periodic Anderson Model
H=#
k,#
εk# n%k#
$ +#
*,#
E*%
& n%*#
& +#
k,#
V&kd*'#ck# + 1
2#
*,#
U* n%*#
& n%*-#
& +1
2#
*,,#
V*,d*'#d,# + h. c.
Non-interacting
s- and d-bands s-d hybridization
d-d hopping on site d-d interaction
nksa ck+acka
=
()
ˆ a ia ia
d
ni d + d
=
()
ˆ
 ̄ ® <  ̄ > + < >  ̄ - < ><  ̄ >
ˆ( ) ˆ( ) ˆ( ) ( ) ( ) ˆ( ) ( ) (d)
i
d
i
d
i
d
i
d
i
d
i
d
i
d
ni n n n n n n n
Mean field approximation


Periodic Anderson Model
ω − E& g&&!
! ω −4
'
V&' g'&!
! ω = δ&&!
Итерации: g&&!
( = δ&&!
ω − E&
g&&!
) = δ&&!
ω − E&
+ V&&!
ω − E& ω − E&!
g&&!
$ = δ&&!
ω − E&
+ V&&!
ω − E& ω − E&!
g&&!
* = δ&&!
ω − E&
+ V&&!
ω − E& ω − E&!
+4
'
V&' V'& !
ω − E& ω − E' ω − E&!
g&&
!= 1
ω − E&
+4
'
V&' V'&
ω − E& ω − E' ω − E&
+4
',,
V&' V', V,&
ω − E& ω − E' ω − E, ω − E&
+⋯
g&&
!= 1
ω − E& − σ&
=1
ω − E&
1
1 − σ&
ω − E&
=1
ω − E&
1 + σ&
ω − E&
+ σ&
ω − E&
$
+⋯
σ& = 4
'
V&' V'&
ω − E'
+4
',
V&' V', V,&
ω − E' ω − E,
+4
',
V&' V', V,- V-&
ω − E' ω − E, ω − E
+⋯


Non-collinear Alexander-Anderson model
ij
i ̄ j ̄
()
å å ò ïþ
ïý
ü
ïî
ïí
ì

úú
û
ù
êê
ë
W= é 
-¥
i
ii i Fi
UN M
d
F
a
a
e
ee re e 2
()
()
22


Energy surface for Cr trimer
V12 = V13 = 0.9 V23 = 1.2
V12/V23 = V13/V23 << 1 V12/V23 = V13/V23 >>1


Energy surface for Fe trimer
V12 = V13 = 0.9, V23 = 1.2
V12/V23 = V13/V23 >> 1 V12 = V13 = 1.24. V23 = 1.31


Magnetic trimers
Energy surfaces of supported trimers: (a) Cr3, (b) Mn3 and (c) Fe3.
Parameters:


Функциональные интегралы в
квантовой механике и
статфизике


Амплитуда перехода
H! p̂, q& = p̂!
2m + U q&
iħ ∂Ψ x, t
∂t = H!Ψ x, t p̂, q& = −iħ
p̂ = −iħ d
dq
q&| ⟩
q = q| ⟩
q
p̂| ⟩
p = p| ⟩
p
q"|q′′ = δ q" − q′′
p"|p′′ = 2πħδ p" − p′′
:
#$
$
dq" ⟩
q" ⟨q′ = 1
:
#$
$
dp"
2πħ ⟩
|p" ⟨p"| = 1
p"|q′ = e# !
ħ %"&"
q"|p′ = p"|q′ * = e
!
ħ %"&"
⟩
|q", t′ = e# !
ħ(')# ⟩
|q" q"", t′′|q"t′ = q""|e # *
ħ('()###)#)|q"
iħ ∂ ⟩
|q, t
∂t = H! ⟩
|q, t ⟩
|q, t = e#!
ħ('()#)!) ⟩
|q, t0 e#*
ħ(') = >
./0
$1
n! − i
ħ H!t
.


Амплитуда перехода. Континуальный интеграл
q"", t′′|q"t′ = q""|e# *1)
ħ 2(' |q"
()###)#)
2 = Δt = q""| e# *1)
ħ ('
2
|q"
= ∫#$
$ dq1 ∫#$
$ dq2 ... ∫#$
$ dq2#0 q""|e# !$%
ħ (' |q2#0 q2#0|e# !$%
ħ (' |q2#! ... q!|e# !$%
ħ (' |q0 q0|e# !$%
ħ (' |q"
=
q.30|e# *4(' |q. ≃ q.30|1 − iεH! + O(ε!)|q. = ∫#$
$ 5%&
!6ħ q.30| ⟩
p. ⟨p.|(1 − iεH! + O(ε!)|q.
ε = 1)
ħ
q.30|p. = e
!
ħ &&'(%& p.|1 − iεH! + O(ε!)|q. = p.|q. - iε p.|H!(p̂, q&)|q. + O(ε!)
p.|H!(p̂, q&)|q. = p.| %7)
!8 + U q& |q. = %&)
!8 + U q. p.|q.
p.|1 − iεH! + O(ε!)|q. = p.|q. (1 − iεH( p., q.) + O(ε!)) 1 − iεH( p., q.) + O(ε!) ≃ e#*4(( %&,&&)


Континуальный интеграл
q.30|e# *4(' |q. ≃ ∫#$
$ 5%&
!6ħ exp iε p.
&&'(# &&
1) − H( p., q.)
q"", t′′|q"t′ = lim ∫#$
$ 5%*
!6ħ ∫#$
$ ... ∫#$
$ ∏./0
2#0 5%!5&!
!6ħ exp *1)
ħ ∑*/:
2#0 p*
&!'(# &!
1) − H( p*, q*)
N→∞ Δt → 0 NΔt = t!! − t!
q"", t′′|q"t′ ≡ ∫ Dp t Dq t exp *
ħ ∫)"
)##
pq̇ − H(p, q) Dp t Dq t ≡ lim 5%*
!6ħ ∏./0
2#0 5%!&!
!6ħ
Δt → 0
:
#$
$
dp*
2πħ exp iΔt
ħ p*
q*30− q*
Δt − p*!
2m − U q* ) = m
2πħiΔt
0/!
exp iΔt
ħ
m
2
q*30− q*
Δt
!
− U q* )
∫#$
$ dx e#<="3>= = 6
< e#+)
,
*1)
ħ
8
!
&!'(# &!
1)
!
− U q* ) 1)→:
*
ħ L(q,q̇ )dt


Амплитуда перехода и континуальный интеграл
S t*, t* + Δt = :
)!
)!31)
dt"L q* t′ , q̇* t′ q(t*) ≡ q* q(t* + Δt) ≡ q*30
q"", t′′|q"t′ = lim 8
!6ħ*1)
2/!
∫#$
$ ... ∫#$
$ ∏./:
2#0 dq.exp *
ħ ∑./:
2#0 S t., t. + Δt
N→∞ Δt → 0
q"", t′′|q"t′ = N : Dq t e
*
ħ ∫%#
%##
A &,&̇ 5) q(t′)= q’ q(t′′)= q’’
Классическая траектория: T
CD & ) ;)#,)""
C& & ) /&./())
=0


Свободные частицы
L q̇ = 8&̇ "
! q"", T|q", 0 = N ∫ Dq t e
!
ħ ∫*
0 13̇ !
) 5) = lim 8
!6ħ*1)
2/!
∫#$
$ ... ∫#$
$ ∏./0
2#0 dq.exp *81)
!ħ ∑./:
2#0 &&4(# &&
1)
!
:
#$
$
m
2πħiΔt
0/!
dq0 exp im
2ħΔt q0 − q: ! + q! − q0 ! = 1
2 exp im
2ħ2Δt q! − q: !
:
#$
$
m
2πħi2Δt
0/!
dq! exp im
2ħΔt qF − q! ! exp im
2ħ2Δt q! − q: ! = 1
3 exp im
2ħ3Δt qF − q: !
:
#$
$
m
2πħi(N − 1)Δt
0/!
dq2#0 exp im
2ħΔt q2 − q2#0 ! exp im
2ħ(N − 1)Δt q2#0 − q: ! = 1
N exp im
2ħNΔt q2 − q: !
q"", T|q", 0 = 8
!6ħ*G
0/!
exp *8
!ħG q′′ − q′ ! = 8
!6ħ*G
0/!
exp *
ħ SHI 0, T SHI 0, T = 8
!J q′′ − q′ !


Гармонический осциллятор
SHI 0, T = 8 K
! LMN KG q′′ ! + q′ ! cos ωT − 2q"q′′
L= 8&̇ "
! − O&"
! =8
! (q̇ 2 − ω2q2)
q"", T|q", 0 = Nexp[ *8 K
! LMN KG q′′ ! + q′ ! cos ωT − 2q"q′′]
N – нормировочный множитель, не зависящий от q’, q’’


Diamagnetic levitation
Polina Shaban Anna Baranova


Earnshaw’s theorem
Here we have:
• sourceless and rotationless static field,
∇ · E = 0, ∇ × E = 0(∇ · B = 0, ∇ × B = 0)
• a lonely point charge in req
In req : F(req) = 0
The condition for a stable equilibrium in req:
∇ · F < 0 in the vicinity of req
but,  ̨
S=|r−req |=δ
F(r) · dS =
ˆ
V
∇ · FdV = 0
Contradiction!


How to fly a frog


Energy and equilibrium
m(r) = − |χ|VB(r)
μ0
E(r) = mgz + |χ|V
2μ0
B2(r)
F(r) = −∇E(r) = −mgez − |χ|V
μ0
B(r)∇B(r) = 0
The equilibrium condition:
B(z)B′(z) = − μ0ρg
|χ|


Stability
Paramagnets:
F(r) = −mgez + |χ|V
μ0
B(r)∇B(r)
∇ · F(r) < 0 ⇒ ∇2B2(r) < 0
but ∇2B2(r) = ∇2 (Bx2 + By2 + Bz2
) ≥ 0 ⇒ no levitation for paramagnets
For diamagnets:
∂x2E(r) > 0, ∂y2E(r) > 0, ∂z2E(r) > 0
⇒ ∂x2B2(r) > 0
} {{ }
vertical stability
, ∂y2B2(r) > 0, ∂z2B2(r) > 0
} {{ }
horizontal stability


Stability
B(r) = ∇Φ(r), φn(z) ≡ ∂znΦ(0, 0, z)
From rotational symmetry: ∂x2Φ(0, 0, z) = ∂y2Φ(0, 0, z) = − 1
2 φ2(z)
Φ(r) = φ0(z) + 1
2
(x2∂x2Φ(0, 0, z) + y2∂y2Φ(0, 0, z)) + . . .
= φ0(z) − 1
4
(x2 + y2) φ2(z) + . . .
⇒ B2(r) = φ2
1(z) + 1
4
(x2 + y2) (φ2
2(z) − 2φ1(z)φ3(z)) + . . .
(vertical stability) D1(z) ≡ B′(z)2 + B(z)B′′(z) > 0
(horizontal stability) D2(z) ≡ B′(z)2 − 2B(z)B′′(z) > 0


Stable zones
On the axis of a solenoid the field B(z) decreases monotonically. There is an inflection point at some height zi, that is B′′(zi) = 0.
At zi, both discriminants D1 and D2 are obviously positive, so the equilibrium is stable at zi. D1 has a zero at a point z1 < zi, similarly, D2 has a zero at a point z2 > zi.
z1 < z < z2


Experiments
A stable zone is about 20 mm.


Congratulations!
You have the flying frog now.


”Там есть видео, но оно не очень” ©Полина https://youtu.be/KlJsVqc0ywM?t=24


Magnet levitation
U = −M · B + mgz = −MB + mgz
In dipole approximation:
U = −M
[
B0 +
{
B′ − mg
M
}
z+ 1
2 B′′z2+
+1
4
{ B′2
2B0
− B′′
}
r2 + · · ·
]
Stability conditions:
Kv ≡ − 1
2 MB′′ > 0
Kh ≡ 1
4M
{
B′′ − B′2
2B0
}
=1
4M
{
B′′ − m2g2
2M2B0
}
>0


Magnet levitation
Introducing an image current:
Ii = μ − 1
μ + 1I = χ
2
Ui = −MiB = − 1
2 MB = |χ|M2μ0
8π
[1
(2d + L + 2z)3 + 1
(2d + L − 2z)3
]
= C + 6|χ|M2μ0
πD5 z2 + . . .
Cz = 6|χ|M2μ0
πD5


Magnet levitation
Vertical stability:
12μ0M|χ|
πD5 > B′′ > (mg)2
2M2B0
Horizontal stability:
45μ0|χ|M2
2D5 > MB′2
B0
= m2g2
MB0


Fin!


Anderson Model: Beyond Mean-field
Anton Shubnic and Denis Sedov
28.03.2021


Green’s and Spectral Functions. General Properties


Model
Green’s function without interaction
Finite life-time


Mean field
Existence of non-zero magnetic moment


Spin fluctuations
Polarization propagator


Polarization operator


Self energy


Self-energy


Computer Physics Communications 269 (2021) 108136
Contents lists available at ScienceDirect
Computer Physics Communications
www.elsevier.com/locate/cpc
The lifetime of micron scale topological chiral magnetic states with atomic resolution !
I.S. Lobanov a,b,∗, V.M. Uzdin a,b
a Department of Physics, St. Petersburg State University, St. Petersburg 198504, Russia b Faculty of Physics, ITMO University, St. Petersburg 197101, Russia
article info abstract
Article history:
Received 21 August 2020 Received in revised form 3 August 2021 Accepted 6 August 2021 Available online 20 August 2021
Keywords: Lifetime Transition rate HTST Matrix determinant
A new method for the numerical computation of the lifetimes of magnetic states within harmonic transition state theory (HTST) has been developed. In the simplest case, the system is described by a Heisenberg-like Hamiltonian with short-range interaction. Calculations are performed in Cartesian coordinates. Constraints on the values of magnetic moments are taken into account using Lagrange multipliers. The pre-exponential factor in the Arrhenius law in HTST is written in terms of the determinants of the Hessian of energy at the minima and saddle points on the multidimensional energy surface. An algorithm for calculating these determinants without searching for eigenvalues of the Hessian but using recursive relations is proposed. The method allows calculating determinants for systems containing millions of magnetic moments. This makes it possible to calculate the pre-exponential factor and estimate the lifetimes of micron-scale topological structures with atomic resolution, which until now has been impossible using standard approaches. The accuracy of the method is demonstrated by calculating 2D and 3D skyrmionic structures.  2021 Published by Elsevier B.V.
1. Introduction
The thermal stability of magnetic states is a key problem for the use of nano- and microstructures in the new generation of magnetic memory, in logical and neuromorphic devices. One way to create stable magnetic nanostructures involves the utilization of artificial topological systems [1,2]. For these systems, one can determine the topological charge, which is an integer that remains constant with a continuous change in magnetization. This should protect the system with continuous magnetization from thermal fluctuations and random disturbances [3–5]. For magnetic moments localized at the sites of the discrete lattice, topological arguments, strictly speaking, are absent. Stability estimation and lifetime calculation for such magnetic structures are a complex problems that have not yet been resolved for most states of interest for applications. For this purpose, in principle, one can use the transition state theory (TST) for magnetic degrees of freedom [6], as well as the Kramers-Langer theory [7,8]. These approaches are based on the analysis of the multidimensional energy surface of the system, the
! The review of this paper was arranged by Prof. D.P. Landau. * Corresponding author at: Faculty of Physics, ITMO University, St. Petersburg
197101, Russia. E-mail address: lobanov.igor@gmail.com (I.S. Lobanov).
search for minima on it corresponding to locally stable states, the construction of minimum energy paths (MEP) between minima, which determine the most probable transition scenarios [9–13]. The state with maximum energy along the MEP is a saddle point on the energy surface. The difference in energy at the saddle point and the minimum gives the activation energy for the corresponding magnetic transition [14,15]. An analytical expression for the rate of magnetic transitions corresponding to the Arrhenius law can be derived in the harmonic approximation, when the shapes of the energy surface at the minima and saddle points are approximated by a quadratic polynomial in all variables [6,11]. The expression for the pre-exponential factor in this law contains the product of the eigenvalues of the Hessian of energy at the minimum and saddle point [6,16]. This approach was implemented to calculate the lifetimes of skyrmions in the fcc-Pd / Fe / Ir(111) system [17–19], where the skyrmion (Sk) size was several nanometers, and the dimension of the energy surface did not exceed several thousand. However, such Sks are stable only at low temperatures of few tens of Kelvin. Sks, which are stable at room temperature, are much larger, and often they are no longer two-dimensional, but three-dimensional structures [20,21]. Even in antiferro- and ferrimagnetic materials in which Sks of small radius were detected at room temperature [22,23], the total number of magnetic moments that make up the structure is of order tens of thousands or more. In ferromagnets,
https://doi.org/10.1016/j.cpc.2021.108136 0010-4655/ 2021 Published by Elsevier B.V.


I.S. Lobanov and V.M. Uzdin Computer Physics Communications 269 (2021) 108136
Sks can contain millions of magnetic moments. The number of degrees of freedom and the dimension of the energy surface in this case may exceeds several millions, and the task of calculating the activation energy and the pre-exponential factor is qualitatively more complex. An approach for MEP computation for a Sk having a several millions-dimensional energy manifold was proposed using truncated minimum energy path method [24]. It takes into account the fact that the noncollinear structure in transition state has a much smaller size than in the ground state. But the calculations of the pre-exponential factor for such systems have not yet been carried out. This is due to the difficulties of finding eigenvalues of a matrix with a rank of several million with the necessary accuracy in a commonly used expression for pre-exponential factor. In this article, we propose a method to compute the pre-exponential factor in the Arrhenius law that does not require knowledge of the complete set of Hessian eigenvalues, but utilizes a recursion relation for the Hessian determinant reducing the problem to computation of determinants of much smaller matrices. The computation of determinants of large matrices is a challenging task appearing as a part of analysis in many physical problems. For general matrix of size N × N complexity of determinant
computation is O (N3) [25]. Therefore typically only systems with
relatively small number of degrees of freedom, about 104 − 105, can be numerically analyzed [11–13,15–18]. However, if the matrix has special structure, the complexity can be reduced, in particular if the matrix is banded with a small number K of diagonals, the
determinant calculation time is O (N K 2) [26]. This makes possible to analyze systems with millions of degrees of freedom. Such situation occurs when calculating the lifetime of topological magnetic systems, if only short-range interactions between the magnetic moments are taken into account. The Hessian matrix block structure in the case is known in advance, since it is determined by pairs of directly interacting magnetic moments. Therefore there is no need to store the entire matrix, but only nonzero elements have to be calculated and saved. Corresponding algorithms for calculating determinants for the Hessian of energy are developed in this article. Exploiting block-diagonal structure of matrix is quite known approach in many applied fields, but seems to be new in the context of lifetime estimation of magnetic systems. Block LU diagonalization is described in details including error analysis in books [27]. Explicit formulas for block tridiagonal matrices are given by Molinary [28]. The approach of Molinary can be interpreted as an discrete version of technique used in [29] for computation of functional determinants. However, this approach requires inversion of the off-diagonal elements of the Hessian matrix, which leads to huge round-off errors, that makes the method inapplicable for the quantitative description of magnetic systems. This article focuses on the development of a fast and robust algorithm for calculation of the lifetime of magnetic states. An important aspect of this problem is the choice of coordinates minimizing error of representation of magnetic moments, suitable for high-performance computations. Since the length of the magnetic moments is constant in the Heisenberg-like model, the natural choice is to use two spherical angles to define the orientation of the moments. However spherical coordinates suffer from a loss of accuracy near the poles. Several other options have been proposed to overcome problem, e.g. use of stereographic projections (ATLAS method) [30], orthogonal matrix transformation [31], etc. In the article we show how to compute determinants using Cartesian coordinates, the same coordinates that used in the definition of energy of the system. Combining the proposed method of determinant evaluation with fast method of dynamic prefactor computation suggested in [32], a straightforward and fast method of lifetime computation is obtained.
The article is organized as follows. In the second section, we introduce the expression for the energy of the magnetic system in the framework of the generalized Heisenberg model in harmonic approximation, and derive an explicit formula for the Hessian matrix for the energy. The third section presents a modified formula for the magnetic transition rate within the HTST. In the harmonic approximation, the pre-exponential factor is more convenient to express through Hessian determinants instead of its eigenvalues. The dynamic factor can also be rewritten in a form independent of the local basis chosen at the saddle point of the energy surface, which is more convenient for numerical calculations. Then we give a method for calculating the determinants of the Hessian block matrices with a fixed relatively small number of nonzero diagonals. We first discuss the simpler case of free boundary conditions, and then we proceed to the boundary conditions of a periodic type. We develop formulas for both cases, and also show how to use the Woodbury-Morison-Sherman equation to reduce a periodic case to a free one. Finally, we give a benchmark computing preexponential factor for decay of magnetic Sks, comparing the result with commonly used approaches.
2. Energy of magnetic system. Gradient and Hessian of energy
We will use generalized Heisenberg model, which describes magnetic moments as classical vectors Mn = μnSn, localized on sites of a crystal lattice. The values of magnetic moments μn are supposed to be constant, and magnetic configuration is determined by set of unit vectors Sn. The energy E of the system, depending on the configuration S = (Sn), n = 1 . . . N, is written as
E = E[S] = Eex + E DM + Ea + E Z (1)
Here Heisenberg term Eex and energy of Dzyaloshinskii-Morya interaction (DMI) E DM are quadratic forms in variables Sn:
Eex = − ∑
〈n,m〉
Jnm(Sn · Sm), E DM = − ∑ 〈n,m〉
Dnm · [Sn × Sm] (2)
the sums are taken over all pairs 〈n, m〉 of interacting moments. Often only pairs of nearest neighbor moments are considered, since these interactions decrease with distance. However, in ref. [33] it is argues that taking into account exchange frustrations and the inclusion of several exchange parameters Jnm can lead to a significant increase in the lifetime of isolated Sks according to their calculations. Also several different DMI-vectors Dnm can be considered [34]. The anisotropy energy Ea contains quadratic terms associated with the local on-site magnetic moment Mn:
Ea = −∑
n
K (eK · Sn)2 (3)
where K is anisotropy constant, and unit vector eK is along the anisotropy axis. There may be several anisotropies, in which case their energies are added up. Multiple anisotropies do not present any difficulties in our study, so we will discuss a single easy axis anisotropy K > 0 for shortness. Zeeman energy E Z is an interaction with an external local magnetic field Bn, it is linear with respect to Mn:
EZ =−∑
n
μnBn · Sn (4)
Quadratic terms (2) and (3) can be written in a matrix form, which is more suitable for further analysis:
Eex + EDM = 1
2
∑
n,m
Sn · ̂ AnmSm. (5)
2


I.S. Lobanov and V.M. Uzdin Computer Physics Communications 269 (2021) 108136
Ea = 1
2
∑
n
Sn · ̂CnSn
where the matrices ̂ Anm and ̂Cn have the following explicit forms:
̂ Anm = − Jnm I3 − [Dnm]×, ̂Cn = −2K |eK 〉〈eK | (6)
Here [a]× is the skew-Hermitian matrix corresponding to the vector a:
[a]× =


0 −az ay az 0 −ax −ay ax 0

,
and
|a〉〈a| =


ax2 axa y axaz
axa y a2y a yaz
axaz a yaz az2

.
In what followed we do not need an explicit form of the matrices; therefore, other types of interactions containing only quadratic terms can be included in the scheme. Below we use that the matrices (6) have the following properties: ̂ Anm = ̂ ATmn, ̂Cn = ̂CnT for
all n, m. If only nearest-neighbors are taken into account, the Hessian matrix has block-diagonal form. The method developed in Section 4 is also applicable for short-range interactions with a finite number of interacting spins (even beyond nearest-neighbors), which result in block-banded structure of the matrix. The dynamics of magnetic states and their entropy are determined by gradient and Hessian of energy. In the absence of damping, the equation of motion for the magnetic system is given by the Landau-Lifshitz equation
dSn
dt = − γ
μn
Sn × Henf f [S].
Here γ is gyromagnetic ratio. Effective field Hef f , is expressed in terms of gradient of energy:
Henf f [S] = − ∂ E[S]
∂ Sn
= −∇n E[S].
Vector of gradient ∇n E[S] not necessary belong to the tangent
space to the sphere Sn2 = 1, but only projection of the gradient to the tangent space P ∇ E[S] affects the motion:
P = diagn Pn, Pnx = x − Sn(Sn · x).
The gradient also points in the direction of the fastest increase of energy, making it useful for optimization problems, in particular for computation of metastable states and minimum energy paths. When a magnetic state moves along the energy gradient ∇S E, the constraints imposed on the system, such as the constancy of the values of individual magnetic moments, may not be met. This problem does not arise if we use coordinates on the manifold, defined by the constraints conditions. However, the introduction of global coordinates without singularities on the manifold is impossible and local coordinates have to be used to obtain good accuracy. Here we propose a method for introducing local coor
dinates near the state S0 in a natural way.
For a particular state S0, the tangent space to the manifold, which is determined by restrictions on the value of the magnetic
moment at the point S0, is formed by all vectors ! ∈ R3N , satisfy
ing the constraints !n · Sn0 = 0. The tangent space coordinates # can be transformed to the coordinates in a neighborhood of S0 on the manifold as follows:
Sn(!) = Sn0 + !n
‖Sn0 + !n‖
The nonlinear mapping is quite complex for analysis, however it can be simplified if only few terms of series expansion for small ! is required:
Sn = Sn0 + !n
√1 + (!n)2 = Sn0 + !n − !n2
2 Sn0 + o(!n)2 (7)
First two terms on the right-hand side defines the tangent space, and the third term takes into account curvature of the manifold. Convenient 2N-dimensional coordinates ξ can be introduced fixing arbitrary orthonormal basis e in the tangent spaces:
!n = ξn1en1 + ξn2en2, en1 · Sn0 = en2 · Sn0 = en1 · en2 = 0, (ekn)2 = 1.
(8)
We denote by %[S0] the embedding %[S0]ξ = ! of the tangent
space in R3N . Using coordinates !, it is easy to compute variation of energy on the manifold. It is worth noting that though ! belongs to the
same space R3N as S, they have different constraints and energy has different expressions in their terms. The energy (1) introduced above can be written as a quadratic form
E[S] = 1
2 S · AS − μB · S, (9)
where Anm = ̂ Anm, n )= m and Ann = ̂Cn. Since matrix A is Hermitian, gradient of energy is ∇ E[S] = AS − μB. Using the decomposition (7), we can express energy in harmonic approximation. To do this we write gradient in terms of !:
∇ E[S] = ∇ E[S0] + A! − 1
2 ADS0 + o(!2) as ! → 0,
where ∇ E[S0] = AS0 − μB, D = diagn !n2. Expression for energy (9) now can be rewritten as
E[S] = 1
2 S · (∇ E[S] − μB),
and we get an expansion of energy with terms of the first and second order in #:
E[S] = E[S0] + E1 + E2 + o(#2),
where
E1 = 1
2 ! · (∇ E[S0] − μB) + 1
2 S0 · A!,
E2 = −1
4 S0 · AD! − 1
4 ! · ADS0 − 1
4 (DS0) · A!
−1
4 (D!) · (∇ E[S0] − μB).
Using definition of the gradient and that A and D are Hermitian, the expressions are simplified to:
E1 = ! · (AS0 − μB),
E2 = 1
2 ! · A! − 1
2 (∇ E[S0]) · DS0.
The last term in E2 is a quadratic form in !. Indeed, if we in
troduce the Lagrange multipliers λn = Sn0 · ∇n E[S0] and define the diagonal matrix ' = diagn λn, it can be written as:
(∇ E[S0]) · DS0 = ! · '!.
Collecting all terms, we obtain harmonic approximation for energy:
E[S] = E[S0] + ! · ∇ E[S0] + 1
2 ! · (A − '[S0])! + o(!2).
3


I.S. Lobanov and V.M. Uzdin Computer Physics Communications 269 (2021) 108136
The matrix of quadratic term of energy is Hessian matrix ̂H :
̂H[S0] = A − '[S0], ̂Hnn = ̂Cn − λn, ̂Hnm = ̂ Anm. (10)
Since energy E is a quadratic form of variables S, its Hessian with respect to S is simply the matrix A. To take into account constraints we introduced coordinates ! in constraints manifold, and it turns out that Hessian of energy in coordinates ! coincide with the matrix A minus a diagonal matrix of Lagrange multipliers, see (10), which makes it easy to compute the Hessian. However we should remember that vectors !n must be orthogonal to Sn0 in computations above. The conditions are easy to satisfy doing energy minimization (computation of metastable states), hence the Hessian matrix can be readily used to implement e.g. non-linear conjugate gradient method. However, we can get rid of the constraints restricting the matrix to 2N space resulting in the final Hessian matrix using the embedding %[S0] defined next to the equation (8):
H[S0] = %T [S0] ̂H[S0] %[S0]. (11)
3. Rates of magnetic transitions in HTST
TST for magnetic degrees of freedom presupposes that magnetic moments are classical objects with energy defined, for example, by the equation (1), and that magnetic transitions are slow with respect to magnetic vibrations so that the Boltzmann distribution is established and maintained in the whole available region in the energy surface up to and including the transition state. Moreover in TST the trajectories on the energy surface suppose to be reactive, i.e. go from initial to final states crossing the dividing surface only once [10]. Initially the system is in the local equilibrium in a neighborhood of the minimum on the energy surface Sm. In accordance with the Boltzmann distribution the probability d P of finding the system in an element of the configuration space dS with energy E can be written as
d P = Z −1 exp
(
− E[S]
kB T
)
dS
The normalization factor Z can be found in the harmonic approximation, if we assume that the energy surface at the minimum is well described by a quadratic dependence on all variables. In a neighborhood of the minimum Sm, where ∇ E[Sm] = 0, the energy surface is locally described by the Hessian matrix ̂H of energy at Sm :
E[S] = E[Sm] + 1
2 ! · H[Sm]! + o(!2),
where an explicit form of Hessian is derived above. Denote by e(mi)
an orthonormal family of eigenvectors of H in configuration Sm:
H[Sm]e(mi) = ζ (mi)e(mi), e(mi) · e(mj) = δij .
Expanding the increment ! over the basis e(mi) : ! = ∑
i !(mi)e(mi) we obtain the following expansion for the energy:
E[S] = E[Sm] + ∑
i
ζ (mi)(!(mi))2 + o(#2). (12)
At a local minimum on the energy surface, all eigenvalues are pos
itive: ζ (mi) ≥ 0. If they are large enough so that the probability of
finding the system outside the vicinity of Sm is negligible, the normalization factor Z can be calculated analytically:
e
E[Sm ]
kB T Z =
∫
R2N
exp
(
−
∑
i ζ (mi)(!(mi))2
kB T
)
d! = (πkB T )N
√det ̂H[Sm] . (13)
Within TST magnetic transition go through the transition state (TS) which is the first order saddle point ST S on the energy surface. Hessian H[ST S ] here has exactly one negative eigenvalue. We will not consider in the article so-called zero modes (cyclic variables), the variables of which the energy is independent. Such modes should be considered separately [17,18]. For convenience
we will enumerate eigenvalues in the increasing order: ζ (1)
TS <0<
ζ (2)
T S ≤ · · · ≤ ζ (2N)
T S . Rate of magnetic transitions κ , which is inverse
lifetime of magnetic state 1/τ , can be estimated as product of probability being at transition state near the dividing surface Z and of rate of crossing Z in direction from initial to final state [6,10]. It can be written as
κ= 1
τ = Z −1
∫
v ⊥ >0
v⊥(!)e− E[S]
kB T d!, (14)
where v⊥ is the component of velocity dS/dt orthogonal to the dividing surface Z and integral is taken over a part of Z where v⊥ > 0. For simplicity we suppose that Z is plane and eigenvector
e(1)
T S is orthogonal to Z at the transition state. The value v⊥ can
be calculated using the Landau-Lifshitz equation in the harmonic approximation. In a neighborhood of saddle point the equation can be linearized resulting in equation of motion in the tangent space:
d
dt !n = γ
μn

SnT S × ∑
〈n,m〉
Hnm[ST S ]!m

 . (15)
The component of the velocity orthogonal to the dividing surface is given by
v⊥ = ∑
n
e(1)
T S · d!n
dt = e(1)
TS ·∑ n
γ
μn
[
SnT S × ∑
<n,m>
Hnm[ST S ]!m
]
.
Decomposing the increments ! over the eigenvectors of Hessian
H (that is ! = ∑
i #(i)
T S e(i)
T S ), we have:
v⊥ = ∑
i
e(1)
T S · ζ (i)
T S #(i)
TS
∑
m
γ
μm
[STmS × e(n)
TS] ≡ ∑
i
a(i)
T S #(i)
T S , (16)
where a(i)
T S = e(1)
TS ·∑
n
γ ζ (i)
TS
μn [SnT S × e(i)
T S ] shows how fast the perpen
dicular component of velocity v⊥ increases when moving from a stationary point ST S in the direction of the eigenvector of the Hes
sian e(i)
T S . Clearly a(1)
T S = 0. Now transition rate can be written as
κ = Z −1e− E[ST S ]
kB T
∫
Z′
∑
i
a(i)
T S !(i)
T S exp
(
−
∑
j ζ ( j)
T S (!( j)
T S )2 kB T
)
d!,
(17)
here the integral is taken over part Z′ of the dividing surface Z
(i.e. a(1)
T S = 0) where ∑
n a(i)
T S !(i)
T S > 0.
The expression in the brackets is the square of the length of a vector in the 2N-dimensional configuration space. This length
is expressed in terms of the coordinates !(i)
TS
√
ζ (i)
kBT ST in the basis
{e(i)
T S }, but can be written in any orthonormal basis. If we choose
one of the vectors of this basis along v⊥, then the boundaries of integration area will have very simple form, and all integrals can be calculated explicitly. As result we will have for rate:
4


I.S. Lobanov and V.M. Uzdin Computer Physics Communications 269 (2021) 108136
κ = C e− E[ST S ]
kB T (π kB T )N
2π
( 2∏N
l=2
ζ (l)
TS
)−1/2 √√√√∑
j
(a( j)
T S )2
ζ ( j)
TS
(18)
Substituting expression (13) gives:
κ= 1
2π
√ det Hm
∏l2=N2 ζ (l)
TS
√√√√∑
j
(a( j)
T S )2
ζ ( j)
TS
e
E[Sm ]−E[ST S ]
kB T (19)
This expression exactly coincides with one reported in the ref. [6] if det Hm is written as product of the eigenvalues ζ (mi).
The states on the MEP near TS can be expressed as S = ST S +
εe(1)
T S + o(ε). These states evolve according to linearized Landau
Lifschitz equation (15) as follows:
1 ε
dSn
dt + o(1) = ζ (1)
TS
∑
n
γ
μn
[SnT S × e(1)
T S,n] ≡ de(1)
T S,n
dt . (20)
The vector de(1)
T S /dt defined by the identity (20) is the velocity of
the state S shifted from TS by an infinitesimal distance ε in the
direction e(1)
T S divided by ε. Denote by b(i) the projection of velocity
de(1)
T S /dt along the MEP into eigensubspace e(i)
T S of ̂H [ST S ].
b(i) = e(i)
T S · de(1)
TS
dt = γ
μ ζ (1)
T S e(i)
T S · [ST S × e(1)
T S ] = ζ (1)
TS ζ (i)
TS
a(i)
T S (21)
It is clear that the vectors b and a are in one-to-one correspondence, but the vector a is introduced as a characteristic of the dividing surface, whereas the vector b depends only on the motion of the magnetic state along the MEP. Now the expression for rate can be written in an alternative form:
κ= 1
2π
√
det Hm | det HT S |
√√√√
2∑N
i=2
(bi )2ζ (i)
T S exp E[Sm] − E[ST S ]
kB T (22)
The sum over eigenvalues can be written as quadratic form with matrix HT S on vector b:
2∑N
i=2
(bi )2ζ (i)
T S = b · HT S b (23)
It can be computed in arbitrary basis, including initial basis of individual spins. Therefore eigenvalue decomposition is no longer necessary, that give opportunity to speed up numerical computation of transition rate. Such method was used in ref. [32] for calculation of Sk lifetime in antiferromagnet. Finally, the transition rate in HTST is computed as follows:
κ = κ ent κdyn
2π exp E[Sm] − E[ST S ]
kB T , (24)
where the entropy factor κent is determined by free energies at state in consideration, and dynamical factor κdyn characterizes motion about TS:
κ ent =
√
det Hm
| det Hts| , κdyn = √b · Htsb,
here b is unit tangent vector to the MEP at the saddle point. The expression for transition rate within HTST presented above takes into account all vibrational modes and count all trajectories in the neighborhood of transition state for which the velocity is directed toward the final state. This approach can work for relatively large damping and has to be corrected via coefficient which take into account recrossing of dividing surface.
Similar expression for the rate of magnetic transitions can be obtained within the Kramers-Langer theory [8]
κ = λ+κent
2π exp E[Sm] − E[ST S ]
kB T (25)
where λ+ is the positive eigenvalue of the operator corresponding the linearized Landau-Lifshitz-Gilbert equation (15). Only dynamical parts in eqs. (24) and (25) are different. In both HTST and Kramers-Langer’s theory the most computationally expensive part is calculation determinants of Hessian of energy. Below we develop methods to speed up computations of determinants, which allow analysis of structures with millions of magnetic moments.
4. Block LU decomposition and determinant
When calculating the rate of magnetic transitions (24), the most difficult task from a computational point of view is to calculate the determinants of the Hessian of energy for systems with huge number of degrees of freedom, which is usually the case for topologically protected structures. If the initial configurations Sm is given and its energy E[Sm] is known, the first step is to find the saddle points on the energy surface corresponding to the transition state ST S . A number of methods have been developed for determining saddle points and constructing an MEP between the initial and final magnetic configurations. For chiral magnetic structures, such as magnetic Sks, one can use the Geodesic Nudged Elastic Band (GNEB) method [9], the string method [35], the truncated MEP method [24], which only find a part of the MEP in the vicinity of TS for large systems with millions moments and a Minimum Mode Following (MMF) method [36] that can be used without knowing the final state and predict unknown transition scenarios. When TS is found, the computation of dynamic prefactor (23) is as expensive as single computation of energy. The entropy prefactor contains the determinants of Hessian of energy. It is the most challenging value to compute due to the large dimensionality of the problem. Without exploiting peculiarities of the Hessian matrices these calculations are possible for system with the number
of magnetic moments up to 105. One way to overcome the difficulty is statistical evaluation, see for example [37–39], however, we are not aware of the successful implementation method to magnetic systems. Another possibility is to exploit the fact that the Hessian matrices in the initial and transition states have very similar eigenvalues, and only part of the ratio of the eigenvalues differs significantly from unity, see, for example, [40]. However, in the benchmark section below, we perform a computational experiment showing that almost all eigenvalues must be computed in order to obtain sufficient prefactor accuracy. Below we propose a method for calculating determinants using the sparsity of the Hessian matrix for a system without long-range interactions, such as dipole interaction. Although the dipole interaction plays an important role in the stabilization of large-scale Sks and other topological structures [5], as a first approximation this interaction can be taken into account using the effective anisotropy [14]. Such approach fits perfectly into the proposed scheme. Hessian of energy in Heisenberg-like model is given by the
equation (11). The Hessian for a state S0 is 2N × 2N matrix writ
ten in the form H = %T ̂H%, where ̂H is 3N × 3N matrix of the quadratic form of energy minus a diagonal matrix providing corrections on curvature of the constraints manifold, % is an em
bedding of R2N to the tangent space to the manifold at S0. It is convenient to consider the matrix ̂H as a block matrix with 3 × 3 blocks ̂Hnm describing interaction of spins n and m. The ̂H matrix is sparse if the interaction is short-range and only a few neighbors need to be taken into account for each magnetic moment.
5


I.S. Lobanov and V.M. Uzdin Computer Physics Communications 269 (2021) 108136
Since the embedding % can be naturally defined as the direct sum of embedding on each sphere for each spin as in (8), the matrix H has the same sparse structure as ̂H . The choice % is not unique, but determinant of H does not depend on %. It is possible to eliminate % from computations completely, if we notice that H has the same determinant as the matrix P ̂H P + (1 − P ) having again the same sparse structure as ̂H , where the matrix P is a projector to the tangent space P = %%T , which can be written in terms of S0:
P = diagn Pn, Pn = 1 − |Sn0〉〈Sn0|.
The simplification is however comes at the cost of computing determinant of 3N × 3N matrix instead of 2N × 2N. The indices n, m for matrix elements Hnm are in fact a tuple of coordinates of spins, e.g. n = (n1, n2, n3), where Hnm acts on spin
Sm. It is convenient to group spins into layers S ̃ n1 = (Sn1,n2,n3 )n2,n3 containing spins having the same first index. The elements of H can also be regrouped into blocks H ̃ n1,m1 acting on the layers
S ̃ m1 . Having system of size N = N1 N2 N3, nk = 1 . . . Nk, the blocks
H ̃ n1,m1 are of size M × M, where M = 2N2 N3. Sufficiently separated layers n1 and m1 do not interact, therefore, the block matrix
H ̃ has few non zero diagonals (banded matrix). The matrix can be transformed to block triangular form doing LU or QR decomposition. Then calculation of the determinant of H is simplified to N1 computations of the determinants of the diagonal blocks of the triangular matrix. Below we demonstrate how this can be done for nearest neighbors model, where the Hessian matrix is block tridiagonal with possible nonzero corners B ̃ N1 for periodic boundary conditions along the first axis:
H ̃ =


 ̃A1 B ̃ 1T 0 · · · B ̃ N1
B ̃ 1  ̃A2 B ̃ 2T · · · 0
0 B ̃ 2  ̃A3 · · · 0
· · · · · · · · · . . . ... B ̃ TN1 0 0 · · ·  ̃AN1


(26)
where  ̃An = H ̃ nn, B ̃ n = H ̃ n+1,n. Since the matrices  ̃An and B ̃ m do not commute in general case, the Leibniz formula for determinants is inapplicable here. However block LU decomposition can be used to transform the matrix into an upper triangular form. For a block matrix 2 by 2, the transformation leads to Schur’s determinant identity:
∣∣∣∣
̂A ̂B ̂C ̂D
∣∣∣∣ =
∣∣∣∣
̂A ̂B 0 ̂D − ̂Ĉ A−1̂ B
∣∣∣∣ = |̂ A| · | ̂D − ̂Ĉ A−1̂ B |,
where according to the Gaussian decomposition procedure the first
row is multiplied by −̂Ĉ A−1 from the left and added to the second row, and we used the fact that the determinant of the triangular block matrix is equal to the product of the determinants of the
diagonal blocks. In the same way we can transform the matrix H ̃ into a similar block triangular matrix. First we consider the free boundary conditions along the first axis, that is, the matrix is block tridiagonal and corners vanish B ̃ N1 = 0. After Gaussian decomposition we obtain an upper trian
gular matrix with the main diagonal consisting of elements A′n, where
A′1 =  ̃A1, A′n+1 =  ̃An+1 − B ̃ n( A′n)−1 B ̃ nT . (27)
Since the determinant of the matrix itself is too large to be stored as a floating point number, we will use its logarithm. The determinant in the transition state is negative, but only the absolute value
of the determinant is required for TST, so we calculate the modulus of the determinant:
ln det |H| =
N ∑1
n=1
ln det | A′n|. (28)
Here the determinant can be calculated using the recursive formula (27) in O (N1) time, which gives a significant improvement
over the O (N13) complexity for a dense matrix. For the Hessian ma
trix containing K off-diagonal blocks, the complexity of the block
LU decomposition is O (N1 K 2), which remains linear with respect to N1. However, regarding the block size M, the algorithm has a
complexity of O (M3) (or less for fast matrix multiplication), since
we still need to invert the diagonal elements of A′n, which are
dense matrices for large N. This means that for maximum performance, one should use block LU decomposition with respect to the largest axis Nk. The H matrix discussed in this section depends on the matrix ̂H of quadratic form of energy as well as the embeddings %n . For uniform media, all matrix elements of ̂H on one diagonal are the same, but for non-uniform states the embeddings %n are, in gen
eral case, different. Therefore the matrix elements  ̃An and B ̃ n are of a general form. However, for the uniformly magnetized state (UMS) S0 (and other states where Sn0 does not depend on n1, for example, the domain wall along the x axis) all diagonals H are constant  ̃An =  ̃A1, B ̃ n = B ̃ 1. In this case, the evaluation of A′n is a simple it
eration of the function f (x) =  ̃A1 − B ̃ 1x−1 B ̃ 1T , acting on symmetric
matrices x. Assuming f is a contraction map, we conclude that  ̃A′∗
converges fast to the fixed point  ̃A′∗. Then
ln det H = N1 ln det A′∗[S0] + O (1), as N1 → ∞.
For the metastable state Sm and the transition state ST S , the entropy prefactor for large N1 can be approximated as follows:
ln kent = 1
2 N1(ln det A′∗[Sm] − ln det A′∗[ST S ]) + O (1),
as N1 → ∞, that is, one dimension can be removed from the analysis. This approach makes it easy to obtain the lifetimes of states obtained by repeating N1 times of single layer of the system. It is worth noting that interlayer interaction is still present in the
equation rate, and A′∗ does not coincide with A1, and the pre
exponential factor exponentially depends on the number of layers N1.
For periodic boundary conditions and short-range interaction, the determinant can also be calculated using the recursive formula, where A′n is the same as above, and
W 1 = B ̃ N1 , Wn+1 = B ̃ nT+1δn+1,N1−1 − B ̃ n( A′n)−1 Wn,
Q 1 = AN1 , Q n+1 = Q n − WnT ( A′n)−1 Wn.
The log-det in this case is computed as
ln det |H| = ln det |Q N1 | +
N 1 −1
∑
i=1
ln det | A′i|. (29)
Alternatively, the determinant of a matrix with corners or any other perturbation can be calculated using the matrix determinant lemma
det(F + U V T ) = det(1 + V T F −1U ) · det F , (30)
and Woodbury matrix identity:
(F + U V T )−1 = F −1 − F −1U (1 + V T F −1U )−1 V T F −1. (31)
6


I.S. Lobanov and V.M. Uzdin Computer Physics Communications 269 (2021) 108136
For examples, denoting by F Hessian for free boundary conditions, the Hessian matrix H for periodic boundary conditions can be written as H = F + U V T + V U T in terms of two block vectors:
U = (1 0 . . . 0)T , V = (0 . . . 0 BN1
)T .
Using (30) and (31) we obtain:
det H = det(1 + aT − b(1 + a)−1c) det(1 + a) det F ,
where a = V T F −1U , b = U T F −1U , c = V T F −1 V . The computation of the first two determinants is relatively fast, since they are determinants of small matrices M × M. The matrix F is tridiagonal,
therefore, one can find the value x = F −1U as a solution of the equation F x = U using Gaussian elimination as above. The same is
true for F −1 V . The matrices a, b and c can be found explicitly by the following identities:
a = B N1 ( A′N1 )−1 D N1 , b = ( A′1)−1 T 1, c = B TN1 ( A′N1 )−1 B N1 ,
D1 = 1, Dn+1 = −Bn( A′n)−1 Dn,
T N1 = D N1 , Tn−1 = Dn−1 − BnT−1( A′n)−1 Tn
where the recursion is first applied upward for D, and after that downward for T .
5. Benchmark
The lifetime of the magnetic states in HTST derived in [6] is expressed in terms of the eigenvalues of Hessian of energy, in particular, the dynamic pre-exponential factor contains the eigenvalues that explicitly requires the computation of spectral decomposition of the Hessian. Spectral decomposition was used to calculate the lifetime of Sks in [6,10,17,18]. In a recent article [32] it was noted that the dynamic term can be computed as the value of the quadratic form defined by the Hessian on certain vector in spin representation, avoiding spectral decomposition completely, therefore, only determinants in the expression for prefactor remains a challenge. Langer’s theory gives another expression for the lifetime [8,40], which does not include spectral decomposition, but only the determinant of the energy Hessian and the only negative eigenvalue of the linearized Landau-Lifshitz-Hilbert equation at the saddle point. Nevertheless, to calculate the ratio of determinants in (25), the spectral decomposition of Hessian of energy is usually used [6,10,17,18] Note, however, that in principle the determinant ratio can be calculated without decomposition into eigenvalues, for example, using LU or QR decomposition. In [40] it was noticed that the ratio of ordered eigenvalue of Hessian is almost one for Sk and TS, except for the smallest eigenvalues. Therefore it seems reasonable to save some efforts skipping computation of all eigenvalues and estimate prefactor by lowest eigenvalues. However, the usefulness of this method is limited, since the number of eigenvalues needed to obtain a reasonable precision varies from system to system and can be large. For example, in the benchmarks below from 4% (for 2D systems) to 50% (for 3D systems) of all eigenvalues are required to obtain correct order of the entropy prefactor. For periodic systems, such as UMS in a square or cubic domain with periodic boundary conditions, the Fourier transform can be applied to diagonalize the Hessian matrix, resulting in a quasiexplicit formula for the determinant in terms of the product of 2N values, where N is the number of magnetic moments. Below, we will compare the following methods for the determinant computation:
SD Spectral decomposition for Hessian used to obtain determinant in the following form:
ln det |H| = ∑
n
ln |ζn|, H = U diag(ζn)U T .
SciPy routing scipy.linalg.eigh was used to compute spectrum. LU LU decomposition for Hessian matrix H = LU gives the following expression for the determinant in terms of diagonal entries Lnn of the lower-triangular matrix L:
ln det |H| = ∑
n
ln |Lnn|.
SciPy routine scipy.linalg.det was used as an implementation. If a meta-stable state is considered, Cholesky decomposition can be used instead. FT Diagonal 2 × 2 blocks H p of Fourier transformed Hessian matrix for periodic system was explicitly formed, then scipy.linalg.det was used to compute determinants of 2 × 2 blocks H p , which were combined after that as follows:
ln det |H| = ∑
p
ln | det H p|,
where p runs over all quasimomentum values. Intermediate computations in the case involve complex numbers. BRD Determinant of block tridiagonal Hessian matrix was computed using described in the previous sections method in particular eq. (29) and eq. (28) for periodic and free boundary conditions, respectively.
There are several representations of magnetic moments that define magnetic configurations and energy surface. Among them are spherical coordinates [9,11], ATLAS method using stereographic projections [30], rotation matrices [31] and 3D unit vectors [4143]. In exact arithmetic, the Hessians must coincide exactly in all approaches. Differences arise only in the choice of the local basis near stationary states. In practice, the accuracy of the representations can be different, for example, spherical coordinates suffer from peculiarities near the poles. In the benchmark, we use 3D unit vectors to represent the spin orientations, which is a reasonable choice for comparison, since there are no singularities, no basis change is required, which leads to an accuracy not worse than in the above articles. For benchmark we consider three systems of increasing size up to million of atoms. The first two systems are 2D structures on a square lattice with free boundary conditions [2F] and periodic boundary conditions [2P]. The third system is a 3D system with a simple cubic structure, periodic boundary conditions in the xy plane, free boundary conditions along the z, and an increasing number of layers in the z direction [3D]. System [2F] is a square lattice of the size W × W ′ with free boundary conditions. The sizes W and W ′ are slightly different, exact sizes are shown in Table 1; the largest system has 106 atoms or 2 · 106 degrees of freedom. The system parameters for the lattice 30 × 31 are chosen as follows:
D0 = 0.35 J, K0 = 0.16 J, μH0 = 0.02 J.
The parameters for larger lattices W × W ′ are chosen to preserve energies and relative size of the Sks:
D = λD0, K = λ2 K0, μH = λ2μH0, where λ = 30/W .
The processes of annihilation and generation of Sks are considered. Three states are taken into account: Sk, UMS and TS, corresponding
7


I.S. Lobanov and V.M. Uzdin Computer Physics Communications 269 (2021) 108136
Fig. 1. Central part of the lattice containing isolated equilibrium Sk (left) and TS for decay in the benchmark [2P] (right) for the smallest lattice 30 × 31: (upper panel) top view, (bottom panel) side view of 1D slice containing the center of the Sk. Colors encode spin orientation. (For interpretation of the colors in the figure(s), the reader is referred to the web version of this article.)
Table 1
Characteristics of isolated Sk decay in 2F benchmark for various lattice sizes corresponding to the same micromagnetic parameters. Transition rate is given by Arrhenius law parametrized by activation barrier #Edecay = E T S − Em , and preexponential factor κdecay = const · κent κdyn , where κdyn is computed in HTST approximation (23). Computation of entropy
prefactor κent involves evaluation of Hessian of energy determinants at Sk det Hm and at (TS) det H T S computed by BRD method according to (28). Relative error of the entropy prefactor δκent is estimated as half-sum of absolute errors of the log-determinants, which in its turn are estimated by evaluation of the determinant for two systems with swapped axes. Jump in precision is explained by change of number of results used for the estimation, since for the smallest five cases results by SD and LU methods are available, in other cases only BRDm results are compared. Prefactor is computed for Heisenberg exchange J = 10 (meV) and magnetic moment μ = 3μB . Prefactor determines Sk decay rate for extremely small temperatures (tunneling is not taken into account). Results show higher stability of large Sk both due to the energy barrier and the entropy prefactor.
Box size W × W ′ #Edecay (J) κdecay (Hz) lg det Hm lg det H T S κ ent δkent
30 × 31 1.367 2.00 · 108 1012.830 1019.888 2.95 · 10−04 5 · 10−11 45 × 46 2.060 2.48 · 107 2160.415 2169.086 4.61 · 10−05 2 · 10−10 70 × 72 2.766 2.17 · 106 5148.701 5159.410 4.42 · 10−06 6 · 10−10 100 × 103 3.332 2.15 · 105 10444.687 10456.967 7.24 · 10−07 8 · 10−10 150 × 154 3.888 5.20 · 104 23348.843 23362.199 2.09 · 10−07 2 · 10−09 230 × 236 4.415 8.32 · 103 54826.139 54840.556 6.18 · 10−08 > 6 · 10−11 340 × 349 4.825 1.53 · 103 119886.573 119901.747 2.58 · 10−08 > 3 · 10−11 500 × 513 5.160 5.04 · 102 259283.215 259298.839 1.54 · 10−08 > 2 · 10−10 750 × 770 5.450 2.13 · 102 584079.328 584095.183 1.18 · 10−08 > 1 · 10−09 1000 × 1027 5.620 1.31 · 102 1039039.601 1039055.468 1.16 · 10−08 > 3 · 10−09
to decay within the domain. The Sk state and TS are shown in Fig. 1. Second benchmark [2P] is the same system as [2F] but with periodic boundary conditions. The same Sk annihilation and nucleation processes are considered, with the same states as in Fig. 1 except that there is no twist of magnetic moments on the boundary (not shown in Fig. 1). In the case of [2P], the Hessian matrix is not strictly tridiagonal, but contains corners, and a different formula for BRDm need be used. The UMS state is periodic, which allows the FT method to be applied. In a continuous periodic model, all states can be translated preserving energy, hence, the Hessian of energy has zero modes for nonuniform states. Continuous zero modes become quasi-zero modes for discrete Hessians. Quasi-zero modes tend to zero as the system density tends to zero (in the W → ∞ test), therefore for sufficiently large systems HTST theory is not applicable, and special care should be taken to estimate the value of the mode. In the benchmark [2P] Sk state has two quasizero modes, therefore we omit Sk state in the benchmark to avoid zero-modes estimation, which will be described elsewhere. Transi
tion state however is only fewer times large than lattice constant, hence TS has no zero-modes due to lattice effects. The third benchmark [3D] is a thin film represented by simple cubic lattice of size 30 × 31 × W with increasing number of layers W = 1 . . . 20. Boundary conditions are free in direction perpendicular to film and periodic in film plane. The DzyaloshinskyMoriya vectors are along the bonds. The external field and easy axis anisotropy are orthogonal to film plane. The system parameters does not depend on the film width N:
D = 0.35 J, K = 0.16 J, H = 0.02 J.
Sk tube annihilation process is considered, which is a transition to the UMS through the TS, corresponding to the tube separation from one boundary for moderate thicknesses of the sample, see Fig. 2. For the BRD method, both the first and the second axes were used for recursion. All metastable states were computed using non-linear conjugate gradient method with line search consisting of single step of New
8


I.S. Lobanov and V.M. Uzdin Computer Physics Communications 269 (2021) 108136
Fig. 2. A slice of three dimensional lattice through the axis of symmetry of Sk tube for the benchmark [3D]: (left) Sk tube state, (right) TS for annihilation process. The thickness W of the sample is 15 layers. Colors encode spin orientation.
ton method. Transition states were computed using TMEP method as described in [24]. The BRD method was applied for systems of all sizes. SD and LU methods were used only for relatively small systems, where the dense Hessian matrix can be formed in RAM. The FT method was applied to the UMS state in the 2P benchmark. Each benchmark was run exclusively on a dedicated machine, using 24 threads on Xeon E5-2678 v3 processor for [3D] benchmark and 16 threads on an AMD Ryzen 7 2700 processor for the [2P] and [2F] benchmarks. All computations are performed in double precision arithmetic. The execution times for determinant computations are presented in Fig. 3. The execution time is almost the same for different states and follows to the computational complexity asymptotic for different methods [44]:
T S D = O (N3), T LU = O (Nω), T F T = O (N ln N),
T B R D = O (N1 N2ω),
(32)
where N = W W ′ is number of magnetic moments in the system
of size W × W ′ (as in definition of the system above), for BRD W ′ is size of the block, and ω < 3 is complexity of the fast matrix multiplication method in use. Since the amount of memory required to store a dense Hessian matrix grows rapidly with increasing system size, SD and LU method were only used for systems with less than 22500 magnetic moments (requiring 128 Gb of RAM for Hessian matrix). Huge memory requirement and high computational complexity make SD and LU methods impractical for computations on large systems, whereas BRD can be used for structures of orders of magnitude larger. Since the exact values of the determinants of the Hessians are unknown for magnetic systems, with the exception of the quasianalytic result for the UMS state, we use the invariance of the determinant with respect to the numbering of the axis of the system to measure the accuracy of the methods. Namely, we calculated each
determinant twice, first for the W × W ′ lattice (and 30 × 31 × W
in [3D]), and secondly, for W ′ × W lattice (and 31 × 30 × W in [3D]). The differences in the logarithms of the determinants are shown in Fig. 4, which can be used as an estimate of the relative error in calculation of the determinants. We also compared the results of computation of the determinant by different methods. The maximum error was always of the same order of magnitude as the error of the worst methods, estimated by comparing the transposed systems, therefore, the comparison of different methods is not shown in the figure to facilitate perception. Computation of the eigenvalues of a symmetric matrix is a well-conditioned task, and the eigenvalues of the Hessian can be
Fig. 3. Determinant computation time as function of box length W . Upper and middle panels: two dimensional lattice with free and periodic boundary conditions, respectively. Bottom panel: three dimensional system with fixed size in x-y plane and increasing thickness. Test are performed for transition from Sk to UMS through TS. Points represent results of numerical experiments. Box sizes for [2F] and [2P] are given by Table 1, the box for [3D] case has size 30 × 31 × W . Theoretical predictions of computation time (32) are drawn as dotted lines.
9


I.S. Lobanov and V.M. Uzdin Computer Physics Communications 269 (2021) 108136
Fig. 4. Determinant computation precision as function of system size. Upper and middle panels: two dimensional lattice with free and periodic boundary conditions, respectively. Bottom panel: three dimensional system with fixed size in x-y plane and increasing thickness W . Test are performed for transitions from Sk to UMS through TS. Box sizes are the same as in Fig. 3.
found with a relative error that is only several times higher than the machine precision ε. This means that SD and FT tests must calculate determinants with a relative error c · N · ε, where N is the number of magnetic moments and c is a moderate constant. The estimate is used as the upper bound for the error in Fig. 4. It is seen that the estimate gives the correct asymptotic for the SD and FT methods, as well as for the LU and BRD methods. The constant c depends on the method and the state. The state Sk has the largest error, while TS and UMS states are calculated with approximately the same accuracy, since TS and UMS differ only by a few tens of nodes. The Fourier transform is predictably both the most accurate and the fastest method. Spectral decomposition also showed good accuracy, with the exception of the Sk state, which has quasi-zero modes, but this is the slowest of the discussed methods. The BRD method showed comparable result to SD method on TS and UMS states, and an order of magnitude more accurate result than SD for Sk state. Overall BRDm is among methods demonstrating smallest error, be
Fig. 5. Precision of prefactor computation as function of system size. Upper and middle panels: two dimensional lattice with free and periodic boundary conditions, respectively. Bottom panel: three dimensional system with fixed size in x-y plane and increasing thickness W . Box sizes are the same as in Fig. 3.
ing much faster than LU and SD decomposition. The LU method shows the worst accuracy, but more than 10 times faster than SDm; hence LU is a reasonable alternative to BRDm for dense Hessian matrices when BRDm is not applicable. The transition rate and the lifetime of magnetic systems contain the entropy prefactor κent , which is the ratio of the determinants of the Hessians. The value of the logarithm of the determinant increases in proportion to the number of spins and is huge for large systems as shown in Table 1. At the same time, the logarithm of the lifetime is weakly dependent on the density of the lattice under proper scaling. Therefore, the problem of calculating the entropy prefactor for large systems is a difficult task, since for large systems the determinants must be calculated with higher accuracy. Taking into account the accuracy of calculating the determinants, as estimated above, we show the error for calculating the entropy prefactor using different methods in Fig. 5. The BRD method has shown better accuracy than SD and LU methods, as well as better performance in terms of speed.
10


I.S. Lobanov and V.M. Uzdin Computer Physics Communications 269 (2021) 108136
6. Conclusions
Exploiting the sparse structure of the Hessian matrix for energy in the Heisenberg-like model with short-range interaction, we developed the BRD method for fast computing the determinant of the Hessians, and have applied the results to calculate the lifetimes of magnetic systems in HTST. The method has relatively small memory requirements, and at any time, only a block corresponding to one layer of the system should be stored in memory. The computational complexity of the method is linear in the number of layers, which makes it possible to use the method for calculating the lifetimes of large systems with millions of magnetic moments systems with millions of spins. In some cases the BRD method can be used for computation of systems with billions of atoms, specifically for elongated systems:
for a 109 × 10 lattice, computation time is of the same order as for
103 × 103. Above, we gave explicit formulas for computation of the determinants of block tridiagonal matrices, which can be easily generalized to a general banded matrix. The formulas are recursive, and we computed all the required matrices layer by layer, using parallelism only for block multiplication and for matrix inversion. Further improvements of the performance can be achieved implementing parallel techniques, e.g. see [45–48]. In the benchmarks above, we excluded from the analysis Sk structures with periodic boundary conditions, due to the existence of zero modes, that is, state transformations with conservation of its energy. HTST is inapplicable in this case; however, in the further development of the theory, one should take into account the zero or quasi-zero modes, when the eigenvalues of the Hessian matrix are close to zero. In this case, the integrals in the section 3 cannot be estimated for infinite regions, but the volume of zero modes should appear in the answer. Moreover, if the number of zero modes is different in the minimum and TS, then the prefactor in the Arrhenius law will depend on the temperature. Sometimes the volumes of the zero modes can be easily estimated, as for the translational modes. However, in general (for example, rotation modes for a pair of Sks, oscillatory modes for a Sk tube, or quasi-zero modes for Hopfions) this is a complex problem beyond the scope of this article. This problem will be addressed elsewhere.
Declaration of competing interest
The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper.
Acknowledgements
We thank Maria Potkina for helpful discussion. This work was funded by Russian Science Foundation (Grant 19-42-06302).
References
[1] A. Fert, N. Reyren, V. Cros, Nat. Rev. Mater. 2 (2017) 17031. [2] G. Finocchio, F. Büttner, R. Tomasello, M. Carpentieri, M. Kläui, J. Phys. D, Appl. Phys. 49 (2016) 423001. [3] A.A. Belavin, A.M. Polyakov, JETP Lett. 22 (1975) 245–248. [4] A.N. Bogdanov, D.A. Yablonskii, Sov. Phys. JETP 68 (1989) 101–103. [5] N. Nagaosa, Y. Tokura, Nat. Nanotechnol. 8 (2013) 899–911.
[6] P.F. Bessarab, V.M. Uzdin, H. Jónsson, Phys. Rev. B 85 (2012) 184409. [7] J.S. Langer, Ann. Phys. 54 (1969) 258. [8] W.T. Coffey, D.A. Garanin, D.J. Mccarthy, Adv. Chem. Phys. 117 (2007) 483–765. [9] P.F. Bessarab, V.M. Uzdin, H. Jónsson, Comput. Phys. Commun. 196 (2015) 335–347. [10] P.F. Bessarab, V.M. Uzdin, H. Jónsson, Z. Phys. Chem. 227 (2013) 1543–1557. [11] L. Desplat, C. Vogler, J.-V. Kim, R.L. Stamps, D. Suess, Phys. Rev. B 101 (2020) 060403(R). [12] L. Desplat, J.-V. Kim, R.L. Stamps, Phys. Rev. B 99 (2019) 174409. [13] A.V. Ivanov, D. Dagbjartsson, J. Tranchida, V.M. Uzdin, H. Jónsson, J. Phys. Condens. Matter 32 (2020) 345901. [14] I.S. Lobanov, H. Jónsson, V.M. Uzdin, Phys. Rev. B 94 (2016) 174418. [15] M. Hoffmann, G.P. Müller, S. Blügel, Phys. Rev. Lett. 124 (2020) 247201. [16] L. Desplat, D. Suess, J.V. Kim, R.L. Stamps, Phys. Rev. B 98 (2018) 134407. [17] P.F. Bessarab, G.P. Müller, I.S. Lobanov, F.N. Rybakov, N.S. Kiselev, H. Jónsson, V.M. Uzdin, S. Blügel, L. Bergqvist, A. Delin, Sci. Rep. 8 (2018) 3433. [18] V.M. Uzdin, M.N. Potkina, I.S. Lobanov, P.F. Bessarab, H. Jónsson, J. Magn. Magn. Mater. 459 (2018) 236–240. [19] V.M. Uzdin, M.N. Potkina, I.S. Lobanov, P.F. Bessarab, H. Jónsson, Physica B 549 (2018) 6–9. [20] A. Soumyanarayanan, M. Raju, A.L.G. Oyarce, A.K.C. Tan, M.-Y. Im, A.P. Petrovi  ́c, P. Ho, K.H. Khoo, M. Tran, C.K. Gan, F. Ernult, C. Panagopoulos, Nat. Mater. 16 (2017) 898–904. [21] D. Maccariello, W. Legrand, N. Reyren, K. Garcia, K. Bouzehouane, S. Collin, V. Cros, A. Fert, Nat. Nanotechnol. 13 (2018) 233–237. [22] S. Woo, K.M. Song, X. Zhang, Y. Zhou, M. Ezawa, X. Liu, S. Finizio, J. Raabe, N.J. Lee, S.-I. Kim, S.-Y. Park, Y. Kim, J.-Y. Kim, D. Lee, O. Lee, J.W. Choi, B.-C. Min, H.C. Koo, J. Chang, Nat. Mater. 15 (2016) 501–506. [23] L. Caretta, M. Mann, F. Büttner, K. Ueda, B. Pfau, C.M. Günther, P. Hessing, A. Churikova, C. Klose, M. Schneider, C. Marcus, D. Bono, K. Bagschik, S. Eisebitt, G.S.D. Beach, Nat. Nanotechnol. 13 (2018) 1154. [24] I.S. Lobanov, M.N. Potkina, H. Jónsson, V.M. Uzdin, Nanosyst.: Phys., Chem., Math. 8 (2017) 586–595. [25] V.Y. Pan, Y. Yu, C. Stewart, Comput. Math. Appl. 34 (1997) 43. [26] G.H. Golub, C.F.V. Loan, Matrix Computations, Johns Hopkins Univ. Press, Baltimore, MD, 1989. [27] N.J. Higham, Accuracy and Stability of Numerical Algorithms, SIAM, 2002. [28] L.G. Molinari, Linear Algebra Appl. 429 (2008) 2221. [29] S. Coleman, Aspects of Symmetry, Cambridge University Press, 1985. [30] F.N. Rybakov, A.B. Borisov, S. Blügel, N.S. Kiselev, Phys. Rev. Lett. 115 (2015) 117201. [31] A.V. Ivanov, D. Dagbartsson, J. Tranchida, V.M. Uzdin, H. Jónsson, J. Phys. Condens. Matter 32 (2020). [32] M.N. Potkina, I.S. Lobanov, H. Jónsson, V.M. Uzdin, J. Appl. Phys. 127 (2020) 213906. [33] S.V. Malottki, B. Dupé, P.F. Bessarab, A. Delin, S. Heinze, Sci. Rep. 7 (2017) 12299. [34] E.Y. Vedmedenko, L. Udvardi, P. Weinberger, R. Wiesendanger, Phys. Rev. B 75 (2007) 104431. [35] P. Heistracher, C. Abert, F. Bruckner, C. Vogler, D. Suess, IEEE Trans. Magn. 54 (2018) 1. [36] G.P. Müller, P.F. Bessarab, S.M. Vlasov, F. Lux, N.S. Kiselev, S. Blügel, V.M. Uzdin, H. Jónsson, Phys. Rev. Lett. 121 (2018) 197202. [37] W. Peng, H. Wang, Comput. Math. Appl. 75 (2018) 1259. [38] T. Massingham, N. Goldman, Mol. Biol. Evol. 24 (2007) 2277. [39] C. Boutsidis, P. Drineasa, P. Kambadurb, E.-M. Kontopouloua, A. Zouzias, Linear Algebra Appl. 533 (2017) 95. [40] G. Fiedler, J. Fidler, J. Lee, T. Schrefl, R.L. Stamps, H.B. Braun, D. Suess, J. Appl. Phys. 111 (2012) 093917. [41] M.J. Donahue, D.G. Porter, OOMMF User’s Guide, Version 1.0, Technical Report, National Institute of Standards and Technology, Gaithersburg, MD, Sept 1999. [42] A. Vansteenkiste, J. Leliaert, M. Dvornik, M. Helsen, F. Garcia-Sanchez, B.V. Waeyenberge, AIP Adv. 4 (2014) 107133. [43] J. Fischbacher, A. Kovacs, H. Oezelt, T. Schrefl, L. Exl, J. Fidler, D. Suess, N. Sakuma, M. Yano, A. Kato, T. Shoji, A. Manabe, AIP Adv. 7 (2017) 045310. [44] E. Isaacson, H.B. Keller, Analysis of Numerical Methods, Courier Corporation, 1994. [45] R. Bevilacqua, B. Codenotti, F. Romani, Linear Algebra Appl. 104 (1988) 39. [46] A. Mahmood, D.J. Lynch, L.D. Philipp, J. Comput. Inf. Technol. 2 (1994) 15. [47] E. Kamgnia, L.B. Nguenang, ARIMA Rev. Afr. Rech. Inform. Math. Appl. 17 (2014) 73. [48] M. Neuenhofen, preprint, arXiv:1801.09840, 2018.
11


Расчет времен жизни
магнитных состояний


Энергия магнитной системы
E = E[S] = Eex + EDM + Ea + Ez
E!" = − 1
2&
#$,&'
D$& [S$×S&]
E() = − 1
2&
#$,&'
J$& (S$. S&) E* = − &
$
K e+ . S$ , E- = − &
$
2
(
μ$ B$ . S$
E() + E!" = 1
2&
#$,&'
S$ . A6$&S& E* = 1
2&
$
S$ . C6$S$
A6$& = − J$&I. + D$& ×
C6$ = −2K;e+ >< |
e+
a×=
0 −a0 a1
a0 0 −a)
−a1 a) 0
|a >< |
a=
a), a)a1 a)a0
a)a1 a1, a1a0
a)a0 a1a0 a0,
A6$& = A6&$
∗ C6$ = C6$
∗


Ограничение на длину: S!
" = 1.
S$
, = 1. S$ = S $
3 + Δ$ + o(∆$) (S $
3, ∆$)=0 (A $4 . S $
3) = (A $, . S $
3) =0 Δ$ = ξ $
4A$
4+ξ$
,A$
,.
S$ = S$
3 + Δ$
S$
3 + Δ$
S$ = S!
"6Δ!
46(∆!)# = S$
3 + Δ$ − 4
, ∆$ ,S$
3 + o( ∆$ ,)
В гармоническом приближении
E() S + E!" S = E() S3 + E!" S3 + &
#$,&'
(Δ$ . ∇&(E() S&
3 + E!" S&
3 )) +
+1
2&
#$,&'
((Δ$ . A6$&Δ&) − (S$
3. A6$&S&
3) ∆$ ,) + o( ∆ ,)
E* S = E* S3 + &
$
(Δ$ . ∇$(E* S$
3 )) + &
$
((Δ$ . C6$Δ$) − (S$
3 . C6$S$
3) ∆$ ,) + o( ∆ ,)
E- S = E- S3 + &
$
Δ$ . ∇$(E- S$
3 )−&
$
μ$(B$ . S$
3) ∆$ , + o( ∆ ,)
E S = E S3 + ∆ . ∇E S3 + ∑#$,&'(Δ$ . HJ$&Δ&) + o( ∆ ,),
HJ$& S3 = HJ()
$& + HJ!"
$& + HJ*
$& + HJ
$& =
=4
, A6$& + δ$&C6$ − δ$&I. (S$
3. ∇$E S3 ).